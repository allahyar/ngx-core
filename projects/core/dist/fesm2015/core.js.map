{"version":3,"file":"core.js","sources":["ng://core/lib/config.ts","ng://core/lib/tokens.ts","ng://core/lib/classes/query.class.ts","ng://core/lib/decorators/inject.decorator.ts","ng://core/lib/services/http-provider.service.ts","ng://core/lib/services/query.service.ts","ng://core/lib/util/helper.ts","ng://core/lib/services/ui.service.ts","ng://core/lib/util/string.ts","ng://core/lib/services/core-translate.service.ts","ng://core/lib/services/authentication.service.ts","ng://core/lib/services/app-load-service.service.ts","ng://core/lib/interceptors/core=http.interceptor.ts","ng://core/lib/services/breadcrumbs.service.ts","ng://core/lib/components/breadcrumbs.component.ts","ng://core/lib/core.module.ts","ng://core/lib/classes/token.class.ts","ng://core/lib/services/token.service.ts","ng://core/lib/interceptors/jwt.interceptor.ts","ng://core/lib/services/auth-guard.service.ts","ng://core/lib/auth.module.ts","ng://core/lib/services/dialog.service.ts","ng://core/lib/components/toast-template.component.ts","ng://core/lib/services/toast.service.ts","ng://core/lib/components/modal-template.component.ts","ng://core/lib/directives/ng-form.directive.ts","ng://core/lib/directives/progress-button.directive.ts","ng://core/lib/ui.module.ts","ng://core/lib/classes/base.class.ts","ng://core/lib/services/modal.service.ts","ng://core/lib/classes/modal.class.ts","ng://core/lib/services/local-storage.service.ts"],"sourcesContent":["import {NgxCoolDialogsBaseConfig} from 'ngx-cool-dialogs';\r\n\r\nexport const MODULE_CONFIG_DEFAULTS = {};\r\n\r\nexport const LOCAL_STORAGE_CONFIG_DEFAULTS = {\r\n\tprefix: 'ZarsamErp'\r\n};\r\n\r\nexport const AUTH_CONFIG_DEFAULTS = {\r\n\tloginEndPoint: '/login'\r\n};\r\n\r\nexport const DIALOG_CONFIG_DEFAULTS: NgxCoolDialogsBaseConfig = {\r\n\ttheme: 'material', // available themes: 'default' | 'material' | 'dark'\r\n\tokButtonText: 'Yes',\r\n\tcancelButtonText: 'No',\r\n\tcolor: '#8030c3',\r\n};\r\n\r\n","import {InjectionToken, Type} from '@angular/core';\nimport {Query} from './classes/query.class';\n\nexport const QUERY_SERVICE_TOKEN = new InjectionToken<Type<Query<any>>>('QueryService');\n\nexport const DEFAULT_LANG = new InjectionToken<string>('DefaultLang');\nexport const SUPPORT_LANG = new InjectionToken<string>('SupportLang');\n","import {Observable} from 'rxjs';\r\nimport {ServerResponse} from '../interfaces/server-response.model';\r\nimport {DataInfo} from '../interfaces/data-info.model';\r\n\r\nexport abstract class Query<T> {\r\n  abstract grid(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract get(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract list(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract post(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract delete(info: DataInfo): Observable<ServerResponse<any>>;\r\n}\r\n\r\n\r\n\r\n\r\n","import {Type, InjectionToken, InjectFlags, Injector} from '@angular/core';\n\nexport function InjectToken<T>(\n\ttoken: Type<T> | InjectionToken<T> | any,\n\tnotFoundValue: T = null,\n\tflags?: InjectFlags\n) {\n\treturn function(target: any, key: string) {\n\t\tconst prev = Object.getOwnPropertyDescriptor(target, key);\n\t\tconst getter = function() {\n\t\t\tif (this['$$$Inject_' + token.toString()]) {\n\t\t\t\treturn this['$$$Inject_' + token.toString()];\n\t\t\t}\n\t\t\tlet localInjector = this.injector || this['$$$_Injector'];\n\t\t\tif (!localInjector) {\n\t\t\t\tfor (const filedKey in this) {\n\t\t\t\t\tif (this.hasOwnProperty(filedKey)) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis[filedKey] instanceof Injector ||\n\t\t\t\t\t\t\t(this[filedKey] &&\n\t\t\t\t\t\t\t\tthis[filedKey].constructor.name === 'Injector_')\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tlocalInjector = this[filedKey];\n\t\t\t\t\t\t\tthis['$$$_Injector'] = localInjector;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!localInjector) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'Could not find local Injector in  (' +\n\t\t\t\t\ttarget.constructor.name +\n\t\t\t\t\t'), use root injector instead!'\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tlocalInjector.constructor.name === 'StaticInjector' &&\n\t\t\t\t\tlocalInjector.parent\n\t\t\t\t) {\n\t\t\t\t\tlocalInjector = localInjector.parent;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst value = (localInjector || window['$$$_root_injector']).get(\n\t\t\t\ttoken,\n\t\t\t\tnotFoundValue,\n\t\t\t\tflags\n\t\t\t);\n\t\t\tthis['$$$' + token.toString()] = value;\n\t\t\treturn value;\n\t\t};\n\t\tObject.defineProperty(target, key, {\n\t\t\tget: getter,\n\t\t\tenumerable: prev == null ? true : prev.enumerable,\n\t\t\tconfigurable: prev == null ? true : prev.configurable\n\t\t});\n\t};\n}\n\nexport function GlobalInject<T>(\n\ttoken: Type<T> | InjectionToken<T> | any,\n\tnotFoundValue: T = null,\n\tflags?: InjectFlags\n) {\n\treturn function(target: any, key: string) {\n\t\tconst prev = Object.getOwnPropertyDescriptor(target, key);\n\t\tconst getter = function() {\n\t\t\tif (this['$$$Inject_' + token.toString()]) {\n\t\t\t\treturn this['$$$Inject_' + token.toString()];\n\t\t\t}\n\t\t\tconst localInjectors: any[] = this.injectors;\n\n\t\t\tif (!localInjectors) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'Could not find local Injectors in  (' +\n\t\t\t\t\ttarget.constructor.name +\n\t\t\t\t\t')!'\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tfor (let i = localInjectors.length - 1; i >= 0; --i) {\n\t\t\t\t\tconst injector = localInjectors[i];\n\t\t\t\t\tconst value = injector.get(token, notFoundValue, flags);\n\t\t\t\t\tthis['$$$' + token.toString()] = value;\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t};\n\t\tObject.defineProperty(target, key, {\n\t\t\tget: getter,\n\t\t\tenumerable: prev == null ? true : prev.enumerable,\n\t\t\tconfigurable: prev == null ? true : prev.configurable\n\t\t});\n\t};\n}\n","import {Observable} from 'rxjs';\r\nimport {HttpClient, HttpEvent} from '@angular/common/http';\r\nimport {Inject, Injectable, Injector} from '@angular/core';\r\nimport {ServerResponse} from '../interfaces/server-response.model';\r\nimport {CoreModuleConfig} from '../interfaces/config.model';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class HttpProvider<T> {\r\n\r\n\tpublic _baseUrl = null;\r\n\r\n\tconstructor(\r\n\t\t@Inject('config') private config: CoreModuleConfig,\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate injector: Injector) {\r\n\r\n\t\tif (!this.config.api.useInterceptor) {\r\n\t\t\tthis._baseUrl = this.config.api.baseUrl;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tget(url: string, options?: any)\r\n\t\t: Observable<any> {\r\n\t\t// this.http.get<any>(data.url);\r\n\t\t// return new Observable((observer) => {\r\n\t\t// \tobserver.next({success: true});\r\n\t\t// \tobserver.complete();\r\n\t\t// });\r\n\t\treturn this.http.get<ServerResponse<T>>(this._baseUrl + url, options);\r\n\t}\r\n\r\n\tpost(url: string, body: any, options?: any): Observable<any> {\r\n\t\treturn this.http.post(this._baseUrl + url, body, options);\r\n\t}\r\n\r\n}\r\n","import {Injectable, Injector} from '@angular/core';\nimport {Query} from '../classes/query.class';\nimport {Observable} from 'rxjs';\nimport {DataInfo} from '../interfaces/data-info.model';\nimport {InjectToken} from '../decorators/inject.decorator';\nimport {HttpProvider} from './http-provider.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class QueryService<T> extends Query<T> {\n\n\t@InjectToken(HttpProvider) http: HttpProvider<T>;\n\n\tconstructor(private injector: Injector) {\n\t\tsuper();\n\t}\n\n\tdelete(info: DataInfo): Observable<T> {\n\t\treturn this.http.get('dadad');\n\t}\n\n\tget(info: DataInfo): Observable<T> {\n\t\treturn undefined;\n\t}\n\n\tlist(info: DataInfo): Observable<T> {\n\t\treturn undefined;\n\t}\n\n\tpost(info: DataInfo): Observable<T> {\n\t\treturn undefined;\n\t}\n\n\tgrid(info: DataInfo): Observable<T> {\n\t\treturn undefined;\n\t}\n\n}\n","import {HttpClient} from '@angular/common/http';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {TranslateLoader, TranslateModuleConfig} from '@ngx-translate/core';\r\nimport {AppLoadService} from '../services/app-load-service.service';\r\n\r\n// required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n\treturn new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n// ngx-translate and the loader module\r\nexport const translateModuleOptions: TranslateModuleConfig = {\r\n\tloader: {\r\n\t\tprovide: TranslateLoader,\r\n\t\tuseFactory: (HttpLoaderFactory),\r\n\t\tdeps: [HttpClient]\r\n\t}\r\n};\r\n\r\nexport function initializeApp(appLoadService: AppLoadService) {\r\n\treturn () => appLoadService.initializeApp();\r\n}\r\n\r\n\r\nexport function isEmpty(obj) {\r\n\treturn Object.keys(obj).length === 0;\r\n}\r\n\r\n// const split = path.split('/');\r\n// split.forEach(crumb => {\r\n// \tif (crumb.indexOf(':', 0) === 0) {\r\n// \t\tconsole.log(crumb);\r\n// \t}\r\n// });\r\nexport function routePathExtract(path: string, route: any): IRoutePath {\r\n\tif (!isEmpty(route.snapshot.params)) {\r\n\t\tconst key = path.split('/')[0].substr(1);\r\n\t\treturn {\r\n\t\t\tkey,\r\n\t\t\tlabel: route.snapshot.params[key]\r\n\t\t};\r\n\t}\r\n\treturn {\r\n\t\tkey: null,\r\n\t\tlabel: path\r\n\t};\r\n}\r\n\r\nexport interface IRoutePath {\r\n\tkey: string;\r\n\tlabel: string;\r\n}\r\n\r\nexport function crumbCleaner(crumb: string): string {\r\n\treturn crumb.substr(1);\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {InjectToken} from '../decorators/inject.decorator';\n\n@Injectable()\nexport class UiService {\n\n  @InjectToken(DOCUMENT)\n  document: Document;\n\n  constructor() {\n  }\n\n  setDirection(dir: any) {\n    this.document.dir = dir;\n  }\n\n  get direction(): any {\n    return this.document.dir;\n  }\n\n\n}\n","export function isString(obj: any): boolean {\r\n\treturn typeof obj === 'string';\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {isString} from '../util/string';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CoreTranslateService {\n\n\t_isLoaded = new BehaviorSubject(false);\n\n\tconstructor(private _translateService: TranslateService) {\n\t}\n\n\taddLangs(langs: string[]): void {\n\t\treturn this._translateService.addLangs(langs);\n\t}\n\n\tuse(lang: string): Observable<any> {\n\t\treturn this._translateService.use(lang);\n\t}\n\n\tsetDefaultLang(lang: string): void {\n\t\tthis._translateService.setDefaultLang(lang);\n\t}\n\n\tinstant(\n\t\tkey: string | Array<string>,\n\t\tinterpolateParams?: Object\n\t): string | any {\n\t\tif (isString(key) && key.indexOf(':') > 0) {\n\t\t\tconst items = (key as string).split(':');\n\t\t\treturn items\n\t\t\t\t.map(item => this._translateService.instant(item, interpolateParams))\n\t\t\t\t.join(' ');\n\t\t}\n\n\t\treturn this._translateService.instant(key, interpolateParams);\n\t}\n\n\tisCompleted() {\n\t\tthis._isLoaded.next(true);\n\t}\n\n\tget loaded(): Observable<boolean> {\n\t\treturn this._isLoaded.asObservable();\n\t}\n\n}\n","import {Inject, Injectable} from '@angular/core';\r\nimport {HttpProvider} from './http-provider.service';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {InjectToken} from '../decorators/inject.decorator';\r\nimport {AuthModuleConfig} from '../interfaces/config.model';\r\nimport {UserResponse} from '../interfaces/auth.model';\r\nimport {Router} from '@angular/router';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n\t@InjectToken(HttpProvider) http: HttpProvider<UserResponse>;\r\n\r\n\tprivate _currentUserSubject = new ReplaySubject<UserResponse>(1);\r\n\tprivate _currentUserValue: UserResponse;\r\n\r\n\tconstructor(@Inject('authConfig') private config: AuthModuleConfig,\r\n\t\t\t\tprivate router: Router) {\r\n\t}\r\n\r\n\tget currentUserValue(): UserResponse {\r\n\t\treturn this._currentUserValue;\r\n\t}\r\n\r\n\tget currentUser(): Observable<any> {\r\n\t\treturn this._currentUserSubject.asObservable();\r\n\t}\r\n\r\n\tsetting(prop: string): any {\r\n\t\tif (prop.indexOf('.') > 0) {\r\n\t\t\tconst split = prop.split('.');\r\n\t\t\t// return this.currentUserValue.setting.bind(split);\r\n\t\t}\r\n\t\treturn this.currentUserValue.setting[prop];\r\n\t}\r\n\r\n\tlogin(username: string, password: string) {\r\n\r\n\t}\r\n\r\n\tverifyToken(token?: string): Observable<boolean> {\r\n\t\treturn this.http.get(this.config.tokenVerifyEndPoint).pipe(map(res => {\r\n\t\t\tif (res.success) {\r\n\t\t\t\tconsole.log(res.success);\r\n\t\t\t\tthis._currentUserValue = res.result;\r\n\t\t\t\tthis._currentUserSubject.next(res.result);\r\n\t\t\t\tthis.router.navigateByUrl(this.config.loginEndPoint);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}));\r\n\t}\r\n\r\n\tloggedIn(): boolean {\r\n\t\treturn this._currentUserValue !== null;\r\n\t}\r\n\r\n\tlogout(endPoint: string): Promise<boolean> {\r\n\t\treturn new Promise<boolean>((resolve, reject) => {\r\n\t\t\tthis.http.get(endPoint || this.config.logoutEndPoint).subscribe(res => {\r\n\t\t\t\tthis._currentUserSubject.next(null);\r\n\t\t\t\tthis._currentUserValue = null;\r\n\t\t\t\tthis.router.navigateByUrl(this.config.guards.loggedOutGuard.redirectUrl);\r\n\t\t\t\tresolve(true);\r\n\t\t\t}, (err) => reject);\r\n\t\t});\r\n\t}\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {CoreTranslateService} from './core-translate.service';\r\nimport {AuthenticationService} from './authentication.service';\r\nimport {InjectToken} from '../decorators/inject.decorator';\r\nimport {AuthModuleConfig} from '../interfaces/config.model';\r\n\r\n@Injectable()\r\nexport class AppLoadService {\r\n\r\n\t@InjectToken(AuthenticationService) _authService: AuthenticationService;\r\n\r\n\tconstructor(private _translateService: CoreTranslateService,\r\n\t\t\t\t@Inject('authConfig') private config: AuthModuleConfig) {\r\n\t}\r\n\r\n\tinitializeApp(): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._translateService.loaded.subscribe(completed => {\r\n\t\t\t\tif (completed) {\r\n\t\t\t\t\tif (!this.config.useTokenVerify) {\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._authService.verifyToken().subscribe(res => {\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {CoreModuleConfig} from '../interfaces/config.model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CoreHttpInterceptor implements HttpInterceptor {\n\n\tconstructor(@Inject('config') private config: CoreModuleConfig) {\n\t}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n\t\tlet changeHeader;\n\t\tif (this.config.api.useInterceptor) {\n\t\t\tchangeHeader = {url: `${this.config.api.baseUrl}${req.url}`};\n\t\t}\n\t\tconst apiReq = req.clone(changeHeader);\n\t\treturn next.handle(apiReq);\n\n\t}\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport {distinctUntilChanged, filter, map} from 'rxjs/operators';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {crumbCleaner, routePathExtract} from '../util/helper';\nimport {UiModuleConfig} from '../interfaces/config.model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class BreadcrumbsService {\n\n\tpublic breadcrumbs$: BehaviorSubject<IBreadcrumb[]> = new BehaviorSubject<IBreadcrumb[]>([]);\n\n\tconstructor(private router: Router,\n\t\t\t\tprivate activatedRoute: ActivatedRoute,\n\t\t\t\t@Inject('uiConfig') private config: UiModuleConfig) {\n\n\t\trouter.events.pipe(\n\t\t\tfilter(event => event instanceof NavigationEnd),\n\t\t\tdistinctUntilChanged()\n\t\t).subscribe(e => {\n\n\t\t\tconst prefix = this.config.breadcrumb.prefix;\n\t\t\tconst crumb = (prefix) ? [{label: prefix.toString(), url: '', key: null}] : [];\n\n\t\t\tthis.breadcrumbs$.next(crumb);\n\t\t\tthis._resolveCrumbs(activatedRoute.root);\n\n\t\t\tif (this.config.breadcrumb.useTitle) {\n\t\t\t\tconsole.log(activatedRoute.root.firstChild);\n\t\t\t}\n\n\t\t});\n\n\t}\n\n\tprivate _resolveCrumbs(route: ActivatedRoute, url: string = '') {\n\n\n\t\tconst path = route.routeConfig ? route.routeConfig.path : '';\n\t\tconst label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data['title'] || '' : 'Home';\n\t\tlet nextUrl: string;\n\t\tif (path.indexOf(':') !== -1) {\n\t\t\tconst sucked = path.split('/');\n\t\t\tsucked.forEach(crumb => {\n\t\t\t\tif (crumb.indexOf(':', 0) === 0) {\n\t\t\t\t\tconst key = crumbCleaner(crumb);\n\t\t\t\t\tconst newLabel = route.snapshot.params[key];\n\t\t\t\t\tnextUrl = `${url}${newLabel}/`;\n\t\t\t\t\tthis.push(newLabel, key, nextUrl);\n\t\t\t\t} else {\n\t\t\t\t\tnextUrl = `${url}${crumb}/`;\n\t\t\t\t\tthis.push(label, null, nextUrl);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\tnextUrl = `${url}${path}/`;\n\t\t\tthis.push(label, null, nextUrl);\n\t\t}\n\n\n\t\tif (route.firstChild) {\n\t\t\treturn this._resolveCrumbs(route.firstChild, url);\n\t\t}\n\t}\n\n\tprivate get crumbsValue(): Array<IBreadcrumb> {\n\t\treturn this.breadcrumbs$.value;\n\t}\n\n\tget crumbsAsObservable(): Observable<IBreadcrumb[]> {\n\t\treturn this.breadcrumbs$.asObservable();\n\t}\n\n\n\tpublic store(key: string, label: string) {\n\t\tthis.breadcrumbs$\n\t\t\t.pipe(map(users => users.find(user => user.key === key)))\n\t\t\t.subscribe(res => {\n\t\t\t\tconst index = this.crumbsValue.indexOf(res);\n\t\t\t\tthis.crumbsValue[index]['label'] = label;\n\t\t\t});\n\t}\n\n\n\tpush(label: string, key: string, url: string) {\n\t\tconst nextUrl = `${url}${label}/`;\n\t\tconst breadcrumb = {key, label, url};\n\t\tconst newBreadcrumbs = [...this.crumbsValue, breadcrumb];\n\t\tthis.breadcrumbs$.next(newBreadcrumbs);\n\t}\n}\n\n\nexport interface IBreadcrumb {\n\tlabel: string;\n\turl: string;\n\tkey: string;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {BreadcrumbsService} from '../services/breadcrumbs.service';\n\n@Component({\n\tselector: 'breadcrumbs',\n\ttemplateUrl: './breadcrumbs.component.html'\n})\nexport class BreadcrumbsComponent implements OnInit {\n\n\n\tconstructor(public _breadcrumbs: BreadcrumbsService) {\n\t\t// this.breadcrumbs$ = _breadcrumbs.breadcrumbs$.asObservable();\n\t}\n\n\tngOnInit() {\n\t}\n\n}\n","import {APP_INITIALIZER, Inject, Injector, ModuleWithProviders, NgModule} from '@angular/core';\nimport {Query} from './classes/query.class';\nimport {QueryService} from './services/query.service';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CoreModuleConfig} from './interfaces/config.model';\nimport {DEFAULT_LANG, QUERY_SERVICE_TOKEN, SUPPORT_LANG} from './tokens';\nimport {InjectToken} from './decorators/inject.decorator';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {initializeApp, translateModuleOptions} from './util/helper';\nimport {UiService} from './services/ui.service';\nimport {CoreTranslateService} from './services/core-translate.service';\nimport {AppLoadService} from './services/app-load-service.service';\nimport {CoreHttpInterceptor} from './interceptors/core=http.interceptor';\nimport {BreadcrumbsService} from './services/breadcrumbs.service';\nimport {BreadcrumbsComponent} from './components/breadcrumbs.component';\nimport {RouterModule} from '@angular/router';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n\tdeclarations: [BreadcrumbsComponent],\n\timports: [\n\t\tHttpClientModule,\n\t\tRouterModule,\n\t\tTranslateModule.forRoot(translateModuleOptions),\n\t\tCommonModule\n\t],\n\texports: [TranslateModule, BreadcrumbsComponent]\n})\nexport class CoreModule {\n\n\t@InjectToken(CoreTranslateService)\n\t_translateService: CoreTranslateService;\n\n\t@InjectToken(UiService)\n\t_uiService: UiService;\n\n\tconstructor(@Inject(DEFAULT_LANG) defaultLang: string,\n\t\t\t\t@Inject(SUPPORT_LANG) supportLang: string[],\n\t\t\t\tinjector: Injector) {\n\n\t\twindow['$$$_root_injector'] = injector;\n\n\t\tthis._translateService.addLangs(supportLang);\n\t\tthis._translateService.setDefaultLang(defaultLang);\n\t\tthis._translateService.use(defaultLang).subscribe(res => {\n\n\t\t\tconst dir = defaultLang === 'fa' ? 'rtl' : 'ltr';\n\t\t\tthis._uiService.setDirection(dir);\n\t\t\tthis._translateService.isCompleted();\n\n\t\t});\n\n\n\t}\n\n\n\tstatic forRoot(config?: CoreModuleConfig): ModuleWithProviders {\n\n\t\treturn {\n\t\t\tngModule: CoreModule,\n\t\t\tproviders: [\n\t\t\t\tUiService,\n\t\t\t\tCoreTranslateService,\n\t\t\t\tAppLoadService,\n\t\t\t\tBreadcrumbsService,\n\t\t\t\t{provide: APP_INITIALIZER, useFactory: initializeApp, deps: [AppLoadService], multi: true},\n\t\t\t\t{provide: 'config', useValue: config},\n\t\t\t\t{\n\t\t\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\t\t\tuseClass: CoreHttpInterceptor,\n\t\t\t\t\tmulti: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: Query,\n\t\t\t\t\tuseClass: QueryService\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: QUERY_SERVICE_TOKEN,\n\t\t\t\t\tuseValue: QueryService\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: DEFAULT_LANG,\n\t\t\t\t\tuseValue: (config && config.language.default) || 'en'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: SUPPORT_LANG,\n\t\t\t\t\tuseValue: (config && config.language.support) || ['en', 'fa']\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n}\n","declare function escape(s: string): string;\r\n\r\nexport class TokenError extends Error {\r\n\r\n\tname = 'TokenError';\r\n\r\n\tconstructor(message: string) {\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport class Token {\r\n\tconstructor(public token: string) {\r\n\t\tif (this.token != null && this.isExpired()) {\r\n\t\t\ttoken = null;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate decodeBase64(str: string): string {\r\n\t\tlet output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n\t\tswitch (output.length % 4) {\r\n\t\t\tcase 0: {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 2: {\r\n\t\t\t\toutput += '==';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 3: {\r\n\t\t\t\toutput += '=';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tthrow new TokenError('Illegal base64url string!');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn decodeURIComponent(escape(typeof window === 'undefined' ? atob(output) : window.atob(output)));\r\n\t}\r\n\r\n\tpublic decodeToken(): any {\r\n\t\tconst parts = this.token.split('.');\r\n\r\n\t\tif (parts.length !== 3) {\r\n\t\t\tthrow new TokenError('A JWT Token must have 3 parts!');\r\n\t\t}\r\n\r\n\t\tconst decoded = this.decodeBase64(parts[1]);\r\n\t\tif (!decoded) {\r\n\t\t\tthrow new TokenError('Cannot decode the token!');\r\n\t\t}\r\n\r\n\t\treturn JSON.parse(decoded);\r\n\t}\r\n\r\n\tpublic getExpirationDate(): Date {\r\n\t\tconst decoded = this.decodeToken();\r\n\r\n\t\tif (!decoded.hasOwnProperty('exp')) {\r\n\t\t\treturn new Date();\r\n\t\t}\r\n\r\n\t\tconst date = new Date(0);\r\n\t\tdate.setUTCSeconds(decoded.exp);\r\n\r\n\t\treturn date;\r\n\t}\r\n\r\n\tpublic isExpired(offsetSeconds: number = 0): boolean {\r\n\t\tconst date = this.getExpirationDate();\r\n\r\n\t\tif (date.getSeconds() === new Date().getSeconds()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\r\n\t}\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {Token} from '../classes/token.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  private _token: BehaviorSubject<Token>;\n\n  constructor() {\n    this._token = new BehaviorSubject(new Token(localStorage.getItem('satellizer_token')));\n  }\n\n  /**\n   * Get the current token.\n   */\n  getToken(): Token {\n    const token = this._token.getValue();\n    return (token && token.token) ? token : null;\n  }\n\n  /**\n   * Returns an stream of tokens.\n   */\n  getTokenStream(): Observable<Token> {\n    return this._token.asObservable();\n  }\n\n  /**\n   * Update the current token.\n   */\n  setToken(token: string) {\n    this._token.next(new Token(token));\n  }\n\n  /**\n   * Remove the current token.\n   */\n  removeToken() {\n    this._token.next(null);\n  }\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {TokenService} from '../services/token.service';\nimport {HttpEvent, HttpHandler, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Token} from '../classes/token.class';\nimport {AuthModuleConfig} from '../interfaces/config.model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class JwtInterceptor {\n\n\tconstructor(@Inject('authConfig') private config: AuthModuleConfig,\n\t\t\t\tprivate _tokenService: TokenService) {\n\t}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n\t\tconst token: Token = this._tokenService.getToken();\n\n\t\tif (token && !token.isExpired()) {\n\t\t\t// {headers: req.headers.set(this.config.headerName, this.config.headerPrefix + ' ' + token.token)}\n\t\t\treq = req.clone({\n\t\t\t\tsetHeaders: {Authorization: `${this.config.headerPrefix} ${token.token}`}\n\t\t\t});\n\t\t}\n\n\t\treturn next.handle(req);\n\t}\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {TokenService} from './token.service';\nimport {InjectToken} from '../decorators/inject.decorator';\nimport {AuthenticationService} from './authentication.service';\nimport {AuthModuleConfig} from '../interfaces/config.model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LoggedInAuth implements CanActivate {\n\n\n\t@InjectToken(AuthenticationService)\n\t_authenticationService: AuthenticationService;\n\n\t@InjectToken(TokenService)\n\t_tokenService: TokenService;\n\n\t@InjectToken(Router)\n\t_router: Router;\n\n\tconstructor(@Inject('authConfig') private config: AuthModuleConfig) {\n\t}\n\n\tcanActivate() {\n\n\t\tconst token = this._tokenService.getToken();\n\n\t\tif (token && token.token) {\n\t\t\treturn !token.isExpired();\n\t\t}\n\n\t\tlet redirectUrl = this.config.guards.loggedInGuard.redirectUrl;\n\t\tif (redirectUrl) {\n\t\t\treturn this._router.navigate([redirectUrl]);\n\t\t}\n\t\treturn false;\n\n\t}\n}\n\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LoggedOutAuth implements CanActivate {\n\n\t@InjectToken(AuthenticationService)\n\t_authenticationService: AuthenticationService;\n\n\t@InjectToken(TokenService)\n\t_tokenService: TokenService;\n\n\t@InjectToken(Router)\n\t_router: Router;\n\n\tconstructor(@Inject('authConfig') private config: AuthModuleConfig) {\n\t}\n\n\tcanActivate() {\n\n\t\tconst token = this._tokenService.getToken();\n\n\t\tif (token && token.token && !token.isExpired()) {\n\t\t\tconst redirectUrl = this.config.guards.loggedOutGuard.redirectUrl;\n\t\t\tif (redirectUrl) {\n\t\t\t\treturn this._router.navigate([redirectUrl]);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {JwtInterceptor} from './interceptors/jwt.interceptor';\nimport {RouterModule} from '@angular/router';\nimport {LoggedInAuth, LoggedOutAuth} from './services/auth-guard.service';\nimport {AuthenticationService} from './services/authentication.service';\nimport {AuthModuleConfig} from './interfaces/config.model';\n\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, HttpClientModule, RouterModule]\n})\nexport class AuthModule {\n\n\tstatic forRoot(config?: AuthModuleConfig): ModuleWithProviders {\n\n\t\treturn {\n\t\t\tngModule: AuthModule,\n\t\t\tproviders: [\n\t\t\t\t{provide: 'authConfig', useValue: config},\n\t\t\t\tAuthenticationService, LoggedInAuth, LoggedOutAuth,\n\t\t\t\t{\n\t\t\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\t\t\tuseClass: JwtInterceptor,\n\t\t\t\t\tmulti: true\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {NgxCoolDialogResult, NgxCoolDialogsLocalConfig, NgxCoolDialogsService} from 'ngx-cool-dialogs';\nimport {UiModuleConfig} from '../interfaces/config.model';\nimport {InjectToken} from '../decorators/inject.decorator';\nimport {CoreTranslateService} from './core-translate.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DialogService {\n\n\t@InjectToken(NgxCoolDialogsService)\n\t_dialogService: NgxCoolDialogsService;\n\n\tprivate _config: NgxCoolDialogsLocalConfig;\n\n\tconstructor(@Inject('uiConfig') private config: UiModuleConfig,\n\t\t\t\tprivate _translateService: CoreTranslateService) {\n\t\tthis.reConfig();\n\n\t}\n\n\tprompt(prompt: string): NgxCoolDialogResult {\n\t\tprompt = this._translateService.instant(prompt);\n\t\treturn this._dialogService.prompt(prompt, this._config);\n\t}\n\n\tconfirm(message: string) {\n\t\tmessage = this._translateService.instant(message);\n\t\treturn this._dialogService.confirm(message, this._config);\n\t}\n\n\n\talert(message: string) {\n\t\treturn this._dialogService.alert(message, this._config);\n\t}\n\n\treConfig() {\n\n\t\tconst {theme, defaultText, cancelButtonText, okButtonText, color} = this.config.dialog;\n\t\t// console.log(theme);\n\n\t\tthis._config = {\n\t\t\ttheme,\n\t\t\tcolor,\n\t\t\tdefaultText: this._translateService.instant(defaultText),\n\t\t\tcancelButtonText: this._translateService.instant(cancelButtonText),\n\t\t\tokButtonText: this._translateService.instant(okButtonText),\n\t\t};\n\n\t}\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Toast} from 'ngx-toast-notifications';\n\n@Component({\n\tselector: 'lib-toast-template',\n\ttemplate: `\n\t\t<div class=\"toast-container\">\n\t\t\t<div class=\"toast-icon\">\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div class=\"toast-message\">\n\t\t\t\t<span class=\"msg-caption\">\n\t\t\t\t\t{{toast.caption}}\n\t\t\t\t</span>\n\t\t\t\t<span class=\"msg-text\">\n\t\t\t\t\t{{toast.text}}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tstyleUrls: ['./toast-template.component.scss']\n})\nexport class ToastTemplateComponent {\n\n\t@Input() toast: Toast;\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {CoreTranslateService} from './core-translate.service';\nimport {UiModuleConfig} from '../interfaces/config.model';\nimport {Toast, Toaster} from 'ngx-toast-notifications';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ToastService {\n\n\tconstructor(private _translateService: CoreTranslateService,\n\t\t\t\tprivate _toast: Toaster,\n\t\t\t\t@Inject('uiConfig') private config: UiModuleConfig) {\n\t}\n\n\tsuccess(text: string, replace?: Object, duration?: number): Toast {\n\n\t\tduration = duration || this.config.toast.duration;\n\t\tconst caption = this._translateService.instant('GLOBAL.OK_TITLE', replace);\n\t\ttext = this._translateService.instant(text, replace);\n\n\t\treturn this._toast.open({text, type: 'success', caption, duration});\n\t}\n\n\twarning(text: string, replace?: Object, duration?: number): Toast {\n\n\t\tduration = duration || this.config.toast.duration;\n\t\tconst caption = this._translateService.instant('GLOBAL.OK_TITLE', replace);\n\t\ttext = this._translateService.instant(text, replace);\n\n\t\treturn this._toast.open({text, type: 'warning', caption, duration});\n\t}\n\n\terror(text: string, replace?: Object, duration?: number): Toast {\n\n\t\tduration = duration || this.config.toast.duration;\n\t\tconst caption = this._translateService.instant('GLOBAL.ERROR_TITLE', replace);\n\t\ttext = this._translateService.instant(text, replace);\n\n\t\treturn this._toast.open({text, type: 'danger', caption, duration});\n\t}\n\n\tinfo(text: string, replace?: Object, duration?: number): Toast {\n\n\t\tduration = duration || this.config.toast.duration;\n\t\tconst caption = this._translateService.instant('GLOBAL.INFO_TITLE', replace);\n\t\ttext = this._translateService.instant(text, replace);\n\n\t\treturn this._toast.open({text, type: 'info', caption, duration});\n\t}\n\n}\n","import {\r\n\tComponent,\r\n\tComponentFactoryResolver,\r\n\tComponentRef,\r\n\tInput,\r\n\tOnDestroy,\r\n\tOnInit,\r\n\tViewChild,\r\n\tViewContainerRef\r\n} from '@angular/core';\r\nimport {BsModalRef} from 'ngx-bootstrap';\r\nimport {NgForm} from '@angular/forms';\r\nimport {Subject, Subscription} from 'rxjs';\r\n\r\n@Component({\r\n\ttemplate: `\r\n\t\t<div class=\"modal-header\">\r\n\t\t\t<h5 class=\"modal-title\">{{title}}</h5>\r\n\t\t\t<button type=\"button\" class=\"close\" (click)=\"onHide()\">\r\n\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t\t<div class=\"modal-body\">\r\n\t\t\t<form #f=\"ngForm\">\r\n\t\t\t\t<ng-container #container libNgForm></ng-container>\r\n\t\t\t\t<button type=\"submit\" class=\"btn btn-success mr-2\" *ngIf=\"loading\"\r\n\t\t\t\t\t\t[progress]=\"promise\"\r\n\t\t\t\t\t\t[disabled]=\"f.invalid\"\r\n\t\t\t\t\t\t(click)=\"onSave()\">\r\n\t\t\t\t\tSave\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"submit\" class=\"btn btn-success\" (click)=\"onClose()\">\r\n\t\t\t\t\tClose\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\r\n\t\t</div>\r\n\t`,\r\n\tstyleUrls: ['./modal-template.component.css']\r\n})\r\nexport class ModalTemplateComponent implements OnInit, OnDestroy {\r\n\r\n\t@ViewChild('f', {static: true}) form: NgForm;\r\n\tpublic onSubmit: Subject<boolean>;\r\n\ttitle: string;\r\n\ttype: any;\r\n\tdata: any;\r\n\r\n\tcomponent: any;\r\n\tcomponentRef: ComponentRef<any>;\r\n\r\n\tloading = false;\r\n\tpromise: Subscription;\r\n\r\n\t@Input() set componentType(c: any) {\r\n\t\tthis.component = c;\r\n\t\tthis.onSubmit = new Subject();\r\n\t\tthis.renderContent();\r\n\t}\r\n\r\n\t@ViewChild('container', {\r\n\t\tread: ViewContainerRef,\r\n\t\tstatic: true\r\n\t}) container: ViewContainerRef;\r\n\r\n\tconstructor(private modalRef: BsModalRef) {\r\n\t}\r\n\r\n\r\n\trenderContent() {\r\n\t\tthis.container.clear();\r\n\t\tconst injector = this.container.injector;\r\n\t\tconst cfr = injector.get(ComponentFactoryResolver);\r\n\t\tconst componentFactory = cfr.resolveComponentFactory(this.component);\r\n\t\tconst componentRef = this.container.createComponent<any>(componentFactory);\r\n\t\tcomponentRef.instance.form = this.form;\r\n\t\tthis.componentRef = componentRef;\r\n\t\tthis.loading = true;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.componentRef) {\r\n\t\t\tthis.componentRef.destroy();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tonSave() {\r\n\r\n\t\tconst resolveModalState = () => {\r\n\t\t\tthis.onSubmit.next(true);\r\n\t\t\tthis.modalRef.hide();\r\n\t\t};\r\n\r\n\t\tthis.promise = this.cri.onSave(this.form.value);\r\n\t\tconst isSubscription: boolean = this.promise instanceof Subscription;\r\n\t\tif (isSubscription) {\r\n\t\t\tconst promise = new Promise((resolve) => {\r\n\t\t\t\t(this.promise as Subscription).add(resolve);\r\n\t\t\t});\r\n\t\t\tif (promise.finally) {\r\n\t\t\t\tpromise.finally(resolveModalState);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonClose() {\r\n\t\tthis.onSubmit.next(false);\r\n\t\tthis.modalRef.hide();\r\n\t}\r\n\r\n\tonHide() {\r\n\t\tthis.modalRef.hide();\r\n\t}\r\n\r\n\tget cri(): any {\r\n\t\treturn this.componentRef.instance;\r\n\t}\r\n}\r\n","import {Directive, forwardRef} from '@angular/core';\nimport {ControlContainer, NgForm} from '@angular/forms';\n\nexport const formDirectiveProvider: any = {\n\tprovide: ControlContainer,\n\tuseExisting: forwardRef(() => NgForm)\n};\n\n@Directive({\n\tselector: '[libNgForm]',\n\tproviders: [formDirectiveProvider],\n\texportAs: 'ngForm'\n})\nexport class NgFormDirective {\n\n\tconstructor() {\n\t}\n\n}\n","import {Directive, ElementRef, HostListener, Input} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\n@Directive({\n  selector: '[progress]'\n})\nexport class ProgressButtonDirective {\n\n\telement: HTMLElement;\n\tpromise: any;\n\tisPromiseDone = false;\n\n\tconstructor(el: ElementRef) {\n\t\tthis.element = el.nativeElement;\n\t}\n\n\t@Input()\n\tset progress(value: Subscription) {\n\t\tconst isSubscription: boolean = value instanceof Subscription;\n\t\tif (isSubscription) {\n\t\t\tthis.promise = new Promise((resolve) => {\n\t\t\t\t(value as Subscription).add(resolve);\n\t\t\t});\n\t\t\tthis.initPromiseHandler();\n\t\t}\n\t}\n\n\tdisabled() {\n\t\tthis.element.setAttribute('disabled', 'disabled');\n\t}\n\n\tenabled() {\n\t\tthis.element.removeAttribute('disabled');\n\t}\n\n\tinitPromiseHandler() {\n\t\tif (this.element && this.promise) {\n\t\t\tthis.disabled();\n\t\t\tconst promise = this.promise;\n\n\t\t\tconst resolveLoadingState = () => {\n\t\t\t\tthis.isPromiseDone = true;\n\t\t\t\tif (this.isPromiseDone) {\n\t\t\t\t\tthis.enabled();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (promise.finally) {\n\t\t\t\tpromise.finally(resolveLoadingState);\n\t\t\t} else {\n\t\t\t\tpromise\n\t\t\t\t\t.then(resolveLoadingState)\n\t\t\t\t\t.catch(resolveLoadingState);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t@HostListener('click')\n\thandleButton() {\n\t\t// some code\n\t}\n\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgxCoolDialogsModule} from 'ngx-cool-dialogs';\nimport {UiModuleConfig} from './interfaces/config.model';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {DIALOG_CONFIG_DEFAULTS} from './config';\nimport {DialogService} from './services/dialog.service';\nimport {ToastNotificationsModule} from 'ngx-toast-notifications';\nimport {ToastTemplateComponent} from './components/toast-template.component';\nimport {ToastService} from './services/toast.service';\nimport {NgbDatepickerModule} from '@ng-bootstrap/ng-bootstrap';\nimport {BsModalRef, ModalModule} from 'ngx-bootstrap';\nimport {ModalTemplateComponent} from './components/modal-template.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgFormDirective} from './directives/ng-form.directive';\nimport {ProgressButtonDirective} from './directives/progress-button.directive';\n\n\n@NgModule({\n\tdeclarations: [\n\t\tModalTemplateComponent,\n\t\tToastTemplateComponent,\n\t\tNgFormDirective,\n\t\tProgressButtonDirective\n\t],\n\timports: [\n\t\tBrowserAnimationsModule,\n\t\tNgxCoolDialogsModule.forRoot(DIALOG_CONFIG_DEFAULTS),\n\t\tToastNotificationsModule.forRoot({component: ToastTemplateComponent}),\n\t\tNgbDatepickerModule,\n\t\tModalModule.forRoot(),\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tCommonModule,\n\t],\n\tentryComponents: [\n\t\tModalTemplateComponent,\n\t\tToastTemplateComponent\n\t]\n})\nexport class UIModule {\n\n\tstatic forRoot(config: UiModuleConfig): ModuleWithProviders {\n\n\t\treturn {\n\t\t\tngModule: UIModule,\n\t\t\tproviders: [\n\t\t\t\t{provide: 'uiConfig', useValue: config},\n\t\t\t\tDialogService,\n\t\t\t\tToastService,\n\t\t\t\tBsModalRef\n\t\t\t]\n\t\t};\n\t}\n}\n\n","import {OnDestroy, OnInit} from '@angular/core';\r\n\r\nexport abstract class Base implements OnInit, OnDestroy {\r\n\r\n\tisAlive = true;\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\t// .pipe(takeWhile(x => this.isAlive))\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.isAlive = false;\r\n\t}\r\n}\r\n","import {\r\n\tComponentFactory,\r\n\tComponentFactoryResolver,\r\n\tComponentRef,\r\n\tInject,\r\n\tInjectable,\r\n\tInjector, ViewContainerRef\r\n} from '@angular/core';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap';\r\nimport {UiModuleConfig} from '../interfaces/config.model';\r\nimport {ModalTemplateComponent} from '../components/modal-template.component';\r\nimport {BehaviorSubject, ReplaySubject, Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ModalService {\r\n\r\n\tconstructor(private _modalService: BsModalService,\r\n\t\t\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\t\t\tpublic modalRef: BsModalRef,\r\n\t\t\t\tprivate injector: Injector,\r\n\t\t\t\t@Inject('uiConfig') private config: UiModuleConfig) {\r\n\t}\r\n\r\n\r\n\topen(componentType: any, config?: IModalConfig): ModalTemplateComponent {\r\n\r\n\t\tthis.modalRef = this._modalService.show(ModalTemplateComponent, {class: config.class});\r\n\t\tconst content = this.modalRef.content;\r\n\r\n\t\tcontent.componentType = componentType;\r\n\t\tcontent.title = config.title || 'title';\r\n\t\tcontent.type = config.type || 'add';\r\n\t\tcontent.data = config.data || {};\r\n\t\treturn content;\r\n\t}\r\n\r\n}\r\n\r\nexport interface IModalConfig {\r\n\ttitle?: string;\r\n\ttype?: 'edit' | 'add' | any;\r\n\tdata?: any;\r\n\tclass?: 'modal-lg' | 'modal-sm';\r\n}\r\n","import {Base} from './base.class';\r\nimport {IBaseModal} from '../interfaces/modal.interface';\r\nimport {ModalService} from '../services/modal.service';\r\nimport {InjectToken} from '../decorators/inject.decorator';\r\n\r\nexport class Modal extends Base implements IBaseModal {\r\n\r\n\ttype: any;\r\n\tdata: any;\r\n\r\n\t@InjectToken(ModalService)\r\n\tmodalService: ModalService;\r\n\r\n\r\n}\r\n\r\n\r\n","import {Inject, Injectable} from '@angular/core';\nimport {LocalStorageConfig} from '../interfaces/config.model';\nimport {LOCAL_STORAGE_CONFIG_DEFAULTS} from '../config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorage {\n\n  _prefix: string;\n\n  constructor(@Inject('config') config?: LocalStorageConfig) {\n    if (config) {\n      this._prefix = config.prefix || LOCAL_STORAGE_CONFIG_DEFAULTS.prefix;\n    }\n  }\n\n  set(key: string, value: string, expiredAt?: number, prefix?: string) {\n\n    if (value !== null) {\n      const data = {\n        expire: expiredAt || 0,\n        data: value\n      };\n      localStorage.setItem(`${prefix || this._prefix}.${key}`, JSON.stringify(data));\n    }\n\n  }\n\n  getKey(index: number): string | null | undefined {\n    if (index < 0) {\n      console.error(new Error('index has to be 0 or greater'));\n    }\n    try {\n      return localStorage.key(index);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  has(key: string, prefix?: string): boolean {\n    return (`${prefix || this._prefix}.${key}` in localStorage);\n  }\n\n  get(key: string, prefix?: string): string | null | undefined {\n    try {\n      return localStorage.getItem(`${prefix || this._prefix}.${key}`);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  remove(key: string, prefix?: string): void {\n    try {\n      localStorage.removeItem(`${prefix || this._prefix}_${key}`);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  clear(): void {\n    try {\n      localStorage.clear();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}