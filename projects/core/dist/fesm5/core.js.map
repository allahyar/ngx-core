{"version":3,"file":"core.js","sources":["ng://core/lib/config.ts","ng://core/lib/tokens.ts","ng://core/lib/classes/query.class.ts","ng://core/lib/decorators/inject.decorator.ts","ng://core/lib/services/http-provider.service.ts","ng://core/lib/services/query.service.ts","ng://core/lib/util/helper.ts","ng://core/lib/services/ui.service.ts","ng://core/lib/core.module.ts","ng://core/lib/classes/token.class.ts","ng://core/lib/services/token.service.ts","ng://core/lib/services/authentication.service.ts","ng://core/lib/services/auth-guard.service.ts","ng://core/lib/auth.module.ts","ng://core/lib/services/local-storage.service.ts"],"sourcesContent":["export const MODULE_CONFIG_DEFAULTS = {};\r\n\r\nexport const LOCAL_STORAGE_CONFIG_DEFAULTS = {\r\n  prefix: 'ZarsamErp'\r\n};\r\n\r\nexport const AUTH_CONFIG_DEFAULTS = {\r\n  loginEndPoint: '/login'\r\n};\r\n","import {InjectionToken, Type} from '@angular/core';\nimport {Query} from './classes/query.class';\n\nexport const QUERY_SERVICE_TOKEN = new InjectionToken<Type<Query<any>>>('QueryService');\n\nexport const DEFAULT_LANG = new InjectionToken<string>('DefaultLang');\nexport const SUPPORT_LANG = new InjectionToken<string>('SupportLang');\n","import {Observable} from 'rxjs';\r\nimport {ServerResponse} from '../interfaces/server-response.model';\r\nimport {DataInfo} from '../interfaces/data-info.model';\r\n\r\nexport abstract class Query<T> {\r\n  abstract grid(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract get(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract list(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract post(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract delete(info: DataInfo): Observable<ServerResponse<any>>;\r\n}\r\n\r\n\r\n\r\n\r\n","import {Type, InjectionToken, InjectFlags, Injector} from '@angular/core';\n\nexport function InjectToken<T>(\n  token: Type<T> | InjectionToken<T> | any,\n  notFoundValue: T = null,\n  flags?: InjectFlags\n) {\n  return function(target: any, key: string) {\n    const prev = Object.getOwnPropertyDescriptor(target, key);\n    const getter = function() {\n      if (this['$$$Inject_' + token.toString()]) {\n        return this['$$$Inject_' + token.toString()];\n      }\n      let localInjector = this.injector || this['$$$_Injector'];\n      if (!localInjector) {\n        for (const filedKey in this) {\n          if (this.hasOwnProperty(filedKey)) {\n            if (\n              this[filedKey] instanceof Injector ||\n              (this[filedKey] &&\n                this[filedKey].constructor.name === 'Injector_')\n            ) {\n              localInjector = this[filedKey];\n              this['$$$_Injector'] = localInjector;\n            }\n          }\n        }\n      }\n      if (!localInjector) {\n        console.warn(\n          'Could not find local Injector in  (' +\n          target.constructor.name +\n          '), use root injector instead!'\n        );\n      } else {\n        if (\n          localInjector.constructor.name === 'StaticInjector' &&\n          localInjector.parent\n        ) {\n          localInjector = localInjector.parent;\n        }\n      }\n      const value = (localInjector || window['$$$_root_injector']).get(\n        token,\n        notFoundValue,\n        flags\n      );\n      this['$$$' + token.toString()] = value;\n      return value;\n    };\n    Object.defineProperty(target, key, {\n      get: getter,\n      enumerable: prev == null ? true : prev.enumerable,\n      configurable: prev == null ? true : prev.configurable\n    });\n  };\n}\n\nexport function GlobalInject<T>(\n  token: Type<T> | InjectionToken<T> | any,\n  notFoundValue: T = null,\n  flags?: InjectFlags\n) {\n  return function(target: any, key: string) {\n    const prev = Object.getOwnPropertyDescriptor(target, key);\n    const getter = function() {\n      if (this['$$$Inject_' + token.toString()]) {\n        return this['$$$Inject_' + token.toString()];\n      }\n      const localInjectors: any[] = this.injectors;\n\n      if (!localInjectors) {\n        console.warn(\n          'Could not find local Injectors in  (' +\n          target.constructor.name +\n          ')!'\n        );\n      } else {\n        for (let i = localInjectors.length - 1; i >= 0; --i) {\n          const injector = localInjectors[i];\n          const value = injector.get(token, notFoundValue, flags);\n          this['$$$' + token.toString()] = value;\n          return value;\n        }\n        return undefined;\n      }\n    };\n    Object.defineProperty(target, key, {\n      get: getter,\n      enumerable: prev == null ? true : prev.enumerable,\n      configurable: prev == null ? true : prev.configurable\n    });\n  };\n}\n","import {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable, Injector} from '@angular/core';\r\nimport {ServerResponse} from '../interfaces/server-response.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpProvider {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private injector: Injector) {\r\n  }\r\n\r\n  get(url: string): Observable<any> {\r\n    // this.http.get<any>(data.url);\r\n    return new Observable((observer) => {\r\n      observer.next({success: true});\r\n      observer.complete();\r\n    });\r\n  }\r\n\r\n  post(url: string, body: any, options?: any): Observable<any> {\r\n    return this.http.post(url, body, options);\r\n  }\r\n\r\n}\r\n","import {Injectable, Injector} from '@angular/core';\nimport {Query} from '../classes/query.class';\nimport {Observable} from 'rxjs';\nimport {DataInfo} from '../interfaces/data-info.model';\nimport {ServerResponse} from '../interfaces/server-response.model';\nimport {InjectToken} from '../decorators/inject.decorator';\nimport {HttpProvider} from './http-provider.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryService<T> extends Query<T> {\n\n  @InjectToken(HttpProvider) http: HttpProvider;\n\n  constructor(private injector: Injector) {\n    super();\n  }\n\n  delete(info: DataInfo): Observable<ServerResponse<T>> {\n    return this.http.get('dadad');\n  }\n\n  get(info: DataInfo): Observable<ServerResponse<T>> {\n    return undefined;\n  }\n\n  list(info: DataInfo): Observable<ServerResponse<T>> {\n    return undefined;\n  }\n\n  post(info: DataInfo): Observable<ServerResponse<T>> {\n    return undefined;\n  }\n\n  grid(info: DataInfo): Observable<ServerResponse<T>> {\n    return undefined;\n  }\n\n}\n","import {HttpClient} from '@angular/common/http';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {TranslateLoader, TranslateModuleConfig} from '@ngx-translate/core';\r\n\r\n// required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n// ngx-translate and the loader module\r\nexport const translateModuleOptions: TranslateModuleConfig = {\r\n  loader: {\r\n    provide: TranslateLoader,\r\n    useFactory: (HttpLoaderFactory),\r\n    deps: [HttpClient]\r\n  }\r\n};\r\n","import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {InjectToken} from '../decorators/inject.decorator';\n\n@Injectable()\nexport class UiService {\n\n  @InjectToken(DOCUMENT)\n  document: Document;\n\n  constructor() {\n  }\n\n  setDirection(dir: any) {\n    this.document.dir = dir;\n  }\n\n  get direction(): any {\n    return this.document.dir;\n  }\n\n\n}\n","import {Inject, Injector, ModuleWithProviders, NgModule} from '@angular/core';\nimport {Query} from './classes/query.class';\nimport {QueryService} from './services/query.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CoreModuleConfig} from './interfaces/config.model';\nimport {DEFAULT_LANG, QUERY_SERVICE_TOKEN, SUPPORT_LANG} from './tokens';\nimport {InjectToken} from './decorators/inject.decorator';\nimport {TranslateModule, TranslateService} from '@ngx-translate/core';\nimport {translateModuleOptions} from './util/helper';\nimport {UiService} from './services/ui.service';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    HttpClientModule,\n    TranslateModule.forRoot(translateModuleOptions)\n  ],\n  exports: [TranslateModule]\n})\nexport class CoreModule {\n\n  @InjectToken(TranslateService)\n  _translateService: TranslateService;\n\n  @InjectToken(UiService)\n  _uiService: UiService;\n\n  constructor(@Inject(DEFAULT_LANG) defaultLang: string,\n              @Inject(SUPPORT_LANG) supportLang: string[],\n              injector: Injector) {\n\n    window['$$$_root_injector'] = injector;\n\n    this._translateService.addLangs(supportLang);\n    this._translateService.setDefaultLang(defaultLang);\n    this._translateService.use(defaultLang).subscribe(res => {\n\n      const dir = defaultLang === 'fa' ? 'rtl' : 'ltr';\n      this._uiService.setDirection(dir);\n\n    });\n\n  }\n\n\n  static forRoot(config?: CoreModuleConfig): ModuleWithProviders {\n\n    return {\n      ngModule: CoreModule,\n      providers: [\n        UiService,\n        {provide: 'config', useValue: config},\n        {\n          provide: Query,\n          useClass: QueryService\n        },\n        {\n          provide: QUERY_SERVICE_TOKEN,\n          useValue: QueryService\n        },\n        {\n          provide: DEFAULT_LANG,\n          useValue: (config && config.language.default) || 'en'\n        },\n        {\n          provide: SUPPORT_LANG,\n          useValue: (config && config.language.support) || ['en', 'fa']\n        }\n      ]\n    };\n  }\n}\n\n","declare function escape(s: string): string;\r\n\r\nexport class TokenError extends Error {\r\n\r\n  name = 'TokenError';\r\n\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n\r\nexport class Token {\r\n  constructor(public token: string) {\r\n    if (this.token != null && this.isExpired()) {\r\n      token = null;\r\n    }\r\n  }\r\n\r\n  private decodeBase64(str: string): string {\r\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n    switch (output.length % 4) {\r\n      case 0: {\r\n        break;\r\n      }\r\n      case 2: {\r\n        output += '==';\r\n        break;\r\n      }\r\n      case 3: {\r\n        output += '=';\r\n        break;\r\n      }\r\n      default: {\r\n        throw new TokenError('Illegal base64url string!');\r\n      }\r\n    }\r\n\r\n    return decodeURIComponent(escape(typeof window === 'undefined' ? atob(output) : window.atob(output)));\r\n  }\r\n\r\n  public decodeToken(): any {\r\n    const parts = this.token.split('.');\r\n\r\n    if (parts.length !== 3) {\r\n      throw new TokenError('A JWT Token must have 3 parts!');\r\n    }\r\n\r\n    const decoded = this.decodeBase64(parts[1]);\r\n    if (!decoded) {\r\n      throw new TokenError('Cannot decode the token!');\r\n    }\r\n\r\n    return JSON.parse(decoded);\r\n  }\r\n\r\n  public getExpirationDate(): Date {\r\n    const decoded = this.decodeToken();\r\n\r\n    if (!decoded.hasOwnProperty('exp')) {\r\n      return new Date();\r\n    }\r\n\r\n    const date = new Date(0);\r\n    date.setUTCSeconds(decoded.exp);\r\n\r\n    return date;\r\n  }\r\n\r\n  public isExpired(offsetSeconds: number = 0): boolean {\r\n    const date = this.getExpirationDate();\r\n\r\n    if (date.getSeconds() === new Date().getSeconds()) {\r\n      return false;\r\n    }\r\n\r\n    return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {Token} from '../classes/token.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  private _token: BehaviorSubject<Token>;\n\n  constructor() {\n    this._token = new BehaviorSubject(new Token(localStorage.getItem('satellizer_token')));\n  }\n\n  /**\n   * Get the current token.\n   */\n  getToken(): Token {\n    const token = this._token.getValue();\n    return (token && token.token) ? token : null;\n  }\n\n  /**\n   * Returns an stream of tokens.\n   */\n  getTokenStream(): Observable<Token> {\n    return this._token.asObservable();\n  }\n\n  /**\n   * Update the current token.\n   */\n  setToken(token: string) {\n    this._token.next(new Token(token));\n  }\n\n  /**\n   * Remove the current token.\n   */\n  removeToken() {\n    this._token.next(null);\n  }\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpProvider} from './http-provider.service';\nimport {Observable, ReplaySubject} from 'rxjs';\nimport {InjectToken} from '../decorators/inject.decorator';\nimport {AuthModuleConfig} from '../interfaces/config.model';\n\n@Injectable()\nexport class AuthenticationService {\n\n  @InjectToken(HttpProvider) http: HttpProvider;\n\n  private _currentUserValue = new ReplaySubject<any>();\n\n  constructor(@Inject('config') private config: AuthModuleConfig) {\n  }\n\n  get currentUserValue() {\n    return this._currentUserValue;\n  }\n\n  get currentUser(): Observable<any> {\n    return this._currentUserValue.asObservable();\n  }\n\n  verifyToken(token: string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.http.get(this.config.loginEndPoint + token).subscribe(res => {\n        if (res.success) {\n          resolve(res);\n          return true;\n        }\n      }, err => reject(err));\n    });\n  }\n\n  loggedIn(): boolean {\n    return this.currentUser !== null;\n  }\n\n  logout(): Observable<any> {\n    this._currentUserValue.next(null);\n    return this._currentUserValue.asObservable();\n  }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {TokenService} from './token.service';\nimport {InjectToken} from '../decorators/inject.decorator';\nimport {AuthenticationService} from './authentication.service';\nimport {AuthModuleConfig} from '../interfaces/config.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedInAuth implements CanActivate {\n\n\n  @InjectToken(AuthenticationService)\n  _authenticationService: AuthenticationService;\n\n  @InjectToken(TokenService)\n  _tokenService: TokenService;\n\n  @InjectToken(Router)\n  _router: Router;\n\n  constructor(@Inject('config') private config: AuthModuleConfig) {\n  }\n\n  canActivate() {\n\n    const token = this._tokenService.getToken();\n\n    if (token && token.token) {\n      return !token.isExpired();\n    }\n\n    let redirectUrl = this.config.guards.loggedInGuard.redirectUrl;\n    if (redirectUrl) {\n      return this._router.navigate([redirectUrl]);\n    }\n    return false;\n\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {JwtInterceptor} from './interceptors/jwt.interceptor';\nimport {RouterModule} from '@angular/router';\nimport {LoggedInAuth} from './services/auth-guard.service';\nimport {AuthenticationService} from './services/authentication.service';\nimport {AuthModuleConfig} from './interfaces/config.model';\n\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule, RouterModule]\n})\nexport class AuthModule {\n\n  static forRoot(config?: AuthModuleConfig): ModuleWithProviders {\n\n    return {\n      ngModule: AuthModule,\n      providers: [\n        {provide: 'config', useValue: config},\n        AuthenticationService, LoggedInAuth,\n        // {\n        //   provide: HTTP_INTERCEPTORS,\n        //   useClass: JwtInterceptor,\n        //   multi: true,\n        // }\n      ]\n    };\n  }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {LocalStorageConfig} from '../interfaces/config.model';\nimport {LOCAL_STORAGE_CONFIG_DEFAULTS} from '../config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorage {\n\n  _prefix: string;\n\n  constructor(@Inject('config') config?: LocalStorageConfig) {\n    if (config) {\n      this._prefix = config.prefix || LOCAL_STORAGE_CONFIG_DEFAULTS.prefix;\n    }\n  }\n\n  set(key: string, value: string, expiredAt?: number, prefix?: string) {\n\n    if (value !== null) {\n      const data = {\n        expire: expiredAt || 0,\n        data: value\n      };\n      localStorage.setItem(`${prefix || this._prefix}.${key}`, JSON.stringify(data));\n    }\n\n  }\n\n  getKey(index: number): string | null | undefined {\n    if (index < 0) {\n      console.error(new Error('index has to be 0 or greater'));\n    }\n    try {\n      return localStorage.key(index);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  has(key: string, prefix?: string): boolean {\n    return (`${prefix || this._prefix}.${key}` in localStorage);\n  }\n\n  get(key: string, prefix?: string): string | null | undefined {\n    try {\n      return localStorage.getItem(`${prefix || this._prefix}.${key}`);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  remove(key: string, prefix?: string): void {\n    try {\n      localStorage.removeItem(`${prefix || this._prefix}_${key}`);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  clear(): void {\n    try {\n      localStorage.clear();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n}\n"],"names":["tslib_1.__extends","tslib_1.__decorate"],"mappings":"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"}