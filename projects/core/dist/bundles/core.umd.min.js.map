{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://core/lib/config.ts","ng://core/lib/tokens.ts","ng://core/lib/classes/query.class.ts","ng://core/lib/decorators/inject.decorator.ts","ng://core/lib/services/http-provider.service.ts","ng://core/lib/services/query.service.ts","ng://core/lib/util/helper.ts","ng://core/lib/services/ui.service.ts","ng://core/lib/util/string.ts","ng://core/lib/services/core-translate.service.ts","ng://core/lib/services/authentication.service.ts","ng://core/lib/services/app-load-service.service.ts","ng://core/lib/interceptors/core=http.interceptor.ts","ng://core/lib/services/breadcrumbs.service.ts","ng://core/lib/components/breadcrumbs.component.ts","ng://core/lib/core.module.ts","ng://core/lib/classes/token.class.ts","ng://core/lib/services/token.service.ts","ng://core/lib/interceptors/jwt.interceptor.ts","ng://core/lib/services/auth-guard.service.ts","ng://core/lib/auth.module.ts","ng://core/lib/services/dialog.service.ts","ng://core/lib/components/toast-template.component.ts","ng://core/lib/services/toast.service.ts","ng://core/lib/components/modal-template.component.ts","ng://core/lib/directives/ng-form.directive.ts","ng://core/lib/directives/progress-button.directive.ts","ng://core/lib/ui.module.ts","ng://core/lib/classes/base.class.ts","ng://core/lib/services/modal.service.ts","ng://core/lib/classes/modal.class.ts","ng://core/lib/services/local-storage.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","LOCAL_STORAGE_CONFIG_DEFAULTS","prefix","DIALOG_CONFIG_DEFAULTS","theme","okButtonText","cancelButtonText","color","QUERY_SERVICE_TOKEN","InjectionToken","DEFAULT_LANG","SUPPORT_LANG","InjectToken","token","notFoundValue","flags","prev","get","toString","localInjector","injector","filedKey","Injector","name","parent","console","warn","window","enumerable","configurable","HttpProvider","config","http","_baseUrl","api","useInterceptor","baseUrl","url","options","post","body","Injectable","args","providedIn","Inject","HttpClient","QueryService","_super","_this","tslib_1.__extends","delete","info","list","grid","tslib_1.__decorate","Query","HttpLoaderFactory","TranslateHttpLoader","translateModuleOptions","loader","provide","TranslateLoader","useFactory","Éµ0","deps","initializeApp","appLoadService","isEmpty","obj","keys","routePathExtract","path","route","snapshot","params","split","substr","label","UiService","setDirection","dir","document","DOCUMENT","Document","isString","CoreTranslateService","_translateService","_isLoaded","BehaviorSubject","addLangs","langs","use","lang","setDefaultLang","instant","interpolateParams","indexOf","map","item","join","isCompleted","asObservable","TranslateService","AuthenticationService","router","_currentUserSubject","ReplaySubject","_currentUserValue","setting","prop","currentUserValue","login","username","password","verifyToken","tokenVerifyEndPoint","pipe","res","success","log","result","navigateByUrl","loginEndPoint","loggedIn","logout","endPoint","Promise","resolve","reject","logoutEndPoint","subscribe","guards","loggedOutGuard","redirectUrl","err","Router","AppLoadService","loaded","completed","useTokenVerify","_authService","CoreHttpInterceptor","intercept","req","changeHeader","apiReq","clone","handle","BreadcrumbsService","activatedRoute","breadcrumbs$","events","filter","event","NavigationEnd","distinctUntilChanged","_resolveCrumbs","root","routeConfig","data","pathExtract","nextUrl","breadcrumb","newBreadcrumbs","concat","__spread","crumbsValue","firstChild","store","x","found","index","ActivatedRoute","BreadcrumbsComponent","_breadcrumbs","ngOnInit","Component","selector","template","CoreModule","defaultLang","supportLang","_uiService","forRoot","ngModule","providers","APP_INITIALIZER","multi","useValue","HTTP_INTERCEPTORS","useClass","language","default","support","NgModule","declarations","imports","HttpClientModule","RouterModule","TranslateModule","CommonModule","exports","TokenError","message","Error","Token","isExpired","decodeBase64","str","output","replace","decodeURIComponent","escape","atob","decodeToken","parts","decoded","JSON","parse","getExpirationDate","Date","date","setUTCSeconds","exp","offsetSeconds","getSeconds","valueOf","TokenService","_token","localStorage","getItem","getToken","getValue","getTokenStream","setToken","removeToken","JwtInterceptor","_tokenService","setHeaders","Authorization","headerPrefix","LoggedInAuth","canActivate","loggedInGuard","_router","navigate","LoggedOutAuth","AuthModule","DialogService","reConfig","prompt","_dialogService","_config","confirm","alert","_a","dialog","defaultText","NgxCoolDialogsService","ToastTemplateComponent","Input","ToastService","_toast","text","duration","toast","caption","open","type","warning","Toaster","ModalTemplateComponent","modalRef","loading","component","onSubmit","Subject","renderContent","container","clear","componentFactory","ComponentFactoryResolver","resolveComponentFactory","componentRef","createComponent","instance","form","ngOnDestroy","destroy","onSave","promise","cri","Subscription","add","finally","hide","onClose","onHide","BsModalRef","ViewChild","static","read","ViewContainerRef","formDirectiveProvider","ControlContainer","useExisting","forwardRef","NgForm","NgFormDirective","Directive","exportAs","ProgressButtonDirective","el","isPromiseDone","element","nativeElement","initPromiseHandler","disabled","setAttribute","enabled","removeAttribute","resolveLoadingState","then","catch","handleButton","ElementRef","HostListener","UIModule","BrowserAnimationsModule","NgxCoolDialogsModule","ToastNotificationsModule","NgbDatepickerModule","ModalModule","FormsModule","ReactiveFormsModule","entryComponents","Base","isAlive","ModalService","_modalService","resolver","componentType","show","class","content","title","BsModalService","Modal","LocalStorage","_prefix","set","expiredAt","expire","setItem","stringify","getKey","has","remove","removeItem","localInjectors","injectors"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {NgxCoolDialogsBaseConfig} from 'ngx-cool-dialogs';\r\n\r\nexport const MODULE_CONFIG_DEFAULTS = {};\r\n\r\nexport const LOCAL_STORAGE_CONFIG_DEFAULTS = {\r\n\tprefix: 'ZarsamErp'\r\n};\r\n\r\nexport const AUTH_CONFIG_DEFAULTS = {\r\n\tloginEndPoint: '/login'\r\n};\r\n\r\nexport const DIALOG_CONFIG_DEFAULTS: NgxCoolDialogsBaseConfig = {\r\n\ttheme: 'material', // available themes: 'default' | 'material' | 'dark'\r\n\tokButtonText: 'Yes',\r\n\tcancelButtonText: 'No',\r\n\tcolor: '#8030c3',\r\n};\r\n\r\n","import {InjectionToken, Type} from '@angular/core';\nimport {Query} from './classes/query.class';\n\nexport const QUERY_SERVICE_TOKEN = new InjectionToken<Type<Query<any>>>('QueryService');\n\nexport const DEFAULT_LANG = new InjectionToken<string>('DefaultLang');\nexport const SUPPORT_LANG = new InjectionToken<string>('SupportLang');\n","import {Observable} from 'rxjs';\r\nimport {ServerResponse} from '../interfaces/server-response.model';\r\nimport {DataInfo} from '../interfaces/data-info.model';\r\n\r\nexport abstract class Query<T> {\r\n  abstract grid(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract get(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract list(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract post(info: DataInfo): Observable<ServerResponse<T>>;\r\n  abstract delete(info: DataInfo): Observable<ServerResponse<any>>;\r\n}\r\n\r\n\r\n\r\n\r\n","import {Type, InjectionToken, InjectFlags, Injector} from '@angular/core';\n\nexport function InjectToken<T>(\n\ttoken: Type<T> | InjectionToken<T> | any,\n\tnotFoundValue: T = null,\n\tflags?: InjectFlags\n) {\n\treturn function(target: any, key: string) {\n\t\tconst prev = Object.getOwnPropertyDescriptor(target, key);\n\t\tconst getter = function() {\n\t\t\tif (this['$$$Inject_' + token.toString()]) {\n\t\t\t\treturn this['$$$Inject_' + token.toString()];\n\t\t\t}\n\t\t\tlet localInjector = this.injector || this['$$$_Injector'];\n\t\t\tif (!localInjector) {\n\t\t\t\tfor (const filedKey in this) {\n\t\t\t\t\tif (this.hasOwnProperty(filedKey)) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis[filedKey] instanceof Injector ||\n\t\t\t\t\t\t\t(this[filedKey] &&\n\t\t\t\t\t\t\t\tthis[filedKey].constructor.name === 'Injector_')\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tlocalInjector = this[filedKey];\n\t\t\t\t\t\t\tthis['$$$_Injector'] = localInjector;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!localInjector) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'Could not find local Injector in  (' +\n\t\t\t\t\ttarget.constructor.name +\n\t\t\t\t\t'), use root injector instead!'\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tlocalInjector.constructor.name === 'StaticInjector' &&\n\t\t\t\t\tlocalInjector.parent\n\t\t\t\t) {\n\t\t\t\t\tlocalInjector = localInjector.parent;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst value = (localInjector || window['$$$_root_injector']).get(\n\t\t\t\ttoken,\n\t\t\t\tnotFoundValue,\n\t\t\t\tflags\n\t\t\t);\n\t\t\tthis['$$$' + token.toString()] = value;\n\t\t\treturn value;\n\t\t};\n\t\tObject.defineProperty(target, key, {\n\t\t\tget: getter,\n\t\t\tenumerable: prev == null ? true : prev.enumerable,\n\t\t\tconfigurable: prev == null ? true : prev.configurable\n\t\t});\n\t};\n}\n\nexport function GlobalInject<T>(\n\ttoken: Type<T> | InjectionToken<T> | any,\n\tnotFoundValue: T = null,\n\tflags?: InjectFlags\n) {\n\treturn function(target: any, key: string) {\n\t\tconst prev = Object.getOwnPropertyDescriptor(target, key);\n\t\tconst getter = function() {\n\t\t\tif (this['$$$Inject_' + token.toString()]) {\n\t\t\t\treturn this['$$$Inject_' + token.toString()];\n\t\t\t}\n\t\t\tconst localInjectors: any[] = this.injectors;\n\n\t\t\tif (!localInjectors) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'Could not find local Injectors in  (' +\n\t\t\t\t\ttarget.constructor.name +\n\t\t\t\t\t')!'\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tfor (let i = localInjectors.length - 1; i >= 0; --i) {\n\t\t\t\t\tconst injector = localInjectors[i];\n\t\t\t\t\tconst value = injector.get(token, notFoundValue, flags);\n\t\t\t\t\tthis['$$$' + token.toString()] = value;\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t};\n\t\tObject.defineProperty(target, key, {\n\t\t\tget: getter,\n\t\t\tenumerable: prev == null ? true : prev.enumerable,\n\t\t\tconfigurable: prev == null ? true : prev.configurable\n\t\t});\n\t};\n}\n","import {Observable} from 'rxjs';\r\nimport {HttpClient, HttpEvent} from '@angular/common/http';\r\nimport {Inject, Injectable, Injector} from '@angular/core';\r\nimport {ServerResponse} from '../interfaces/server-response.model';\r\nimport {CoreModuleConfig} from '../interfaces/config.model';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class HttpProvider<T> {\r\n\r\n\tpublic _baseUrl = null;\r\n\r\n\tconstructor(\r\n\t\t@Inject('config') private config: CoreModuleConfig,\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate injector: Injector) {\r\n\r\n\t\tif (!this.config.api.useInterceptor) {\r\n\t\t\tthis._baseUrl = this.config.api.baseUrl;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tget(url: string, options?: any)\r\n\t\t: Observable<any> {\r\n\t\t// this.http.get<any>(data.url);\r\n\t\t// return new Observable((observer) => {\r\n\t\t// \tobserver.next({success: true});\r\n\t\t// \tobserver.complete();\r\n\t\t// });\r\n\t\treturn this.http.get<ServerResponse<T>>(this._baseUrl + url, options);\r\n\t}\r\n\r\n\tpost(url: string, body: any, options?: any): Observable<any> {\r\n\t\treturn this.http.post(this._baseUrl + url, body, options);\r\n\t}\r\n\r\n}\r\n","import {Injectable, Injector} from '@angular/core';\nimport {Query} from '../classes/query.class';\nimport {Observable} from 'rxjs';\nimport {DataInfo} from '../interfaces/data-info.model';\nimport {InjectToken} from '../decorators/inject.decorator';\nimport {HttpProvider} from './http-provider.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class QueryService<T> extends Query<T> {\n\n\t@InjectToken(HttpProvider) http: HttpProvider<T>;\n\n\tconstructor(private injector: Injector) {\n\t\tsuper();\n\t}\n\n\tdelete(info: DataInfo): Observable<T> {\n\t\treturn this.http.get('dadad');\n\t}\n\n\tget(info: DataInfo): Observable<T> {\n\t\treturn undefined;\n\t}\n\n\tlist(info: DataInfo): Observable<T> {\n\t\treturn undefined;\n\t}\n\n\tpost(info: DataInfo): Observable<T> {\n\t\treturn undefined;\n\t}\n\n\tgrid(info: DataInfo): Observable<T> {\n\t\treturn undefined;\n\t}\n\n}\n","import {HttpClient} from '@angular/common/http';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {TranslateLoader, TranslateModuleConfig} from '@ngx-translate/core';\r\nimport {AppLoadService} from '../services/app-load-service.service';\r\n\r\n// required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n\treturn new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n// ngx-translate and the loader module\r\nexport const translateModuleOptions: TranslateModuleConfig = {\r\n\tloader: {\r\n\t\tprovide: TranslateLoader,\r\n\t\tuseFactory: (HttpLoaderFactory),\r\n\t\tdeps: [HttpClient]\r\n\t}\r\n};\r\n\r\nexport function initializeApp(appLoadService: AppLoadService) {\r\n\treturn () => appLoadService.initializeApp();\r\n}\r\n\r\n\r\nexport function isEmpty(obj) {\r\n\treturn Object.keys(obj).length === 0;\r\n}\r\n\r\n\r\nexport function routePathExtract(path: string, route: any): IRoutePath  {\r\n\tif (!isEmpty(route.snapshot.params)) {\r\n\t\tconst key = path.split('/')[0].substr(1);\r\n\t\treturn {\r\n\t\t\tkey,\r\n\t\t\tlabel: route.snapshot.params[key]\r\n\t\t};\r\n\t}\r\n\treturn {\r\n\t\tkey: null,\r\n\t\tlabel: path\r\n\t};\r\n}\r\n\r\nexport interface IRoutePath {\r\n\tkey: string;\r\n\tlabel: string;\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {InjectToken} from '../decorators/inject.decorator';\n\n@Injectable()\nexport class UiService {\n\n  @InjectToken(DOCUMENT)\n  document: Document;\n\n  constructor() {\n  }\n\n  setDirection(dir: any) {\n    this.document.dir = dir;\n  }\n\n  get direction(): any {\n    return this.document.dir;\n  }\n\n\n}\n","export function isString(obj: any): boolean {\r\n\treturn typeof obj === 'string';\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {isString} from '../util/string';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CoreTranslateService {\n\n\t_isLoaded = new BehaviorSubject(false);\n\n\tconstructor(private _translateService: TranslateService) {\n\t}\n\n\taddLangs(langs: string[]): void {\n\t\treturn this._translateService.addLangs(langs);\n\t}\n\n\tuse(lang: string): Observable<any> {\n\t\treturn this._translateService.use(lang);\n\t}\n\n\tsetDefaultLang(lang: string): void {\n\t\tthis._translateService.setDefaultLang(lang);\n\t}\n\n\tinstant(\n\t\tkey: string | Array<string>,\n\t\tinterpolateParams?: Object\n\t): string | any {\n\t\tif (isString(key) && key.indexOf(':') > 0) {\n\t\t\tconst items = (key as string).split(':');\n\t\t\treturn items\n\t\t\t\t.map(item => this._translateService.instant(item, interpolateParams))\n\t\t\t\t.join(' ');\n\t\t}\n\n\t\treturn this._translateService.instant(key, interpolateParams);\n\t}\n\n\tisCompleted() {\n\t\tthis._isLoaded.next(true);\n\t}\n\n\tget loaded(): Observable<boolean> {\n\t\treturn this._isLoaded.asObservable();\n\t}\n\n}\n","import {Inject, Injectable} from '@angular/core';\r\nimport {HttpProvider} from './http-provider.service';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {InjectToken} from '../decorators/inject.decorator';\r\nimport {AuthModuleConfig} from '../interfaces/config.model';\r\nimport {UserResponse} from '../interfaces/auth.model';\r\nimport {Router} from '@angular/router';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n\t@InjectToken(HttpProvider) http: HttpProvider<UserResponse>;\r\n\r\n\tprivate _currentUserSubject = new ReplaySubject<UserResponse>(1);\r\n\tprivate _currentUserValue: UserResponse;\r\n\r\n\tconstructor(@Inject('authConfig') private config: AuthModuleConfig,\r\n\t\t\t\tprivate router: Router) {\r\n\t}\r\n\r\n\tget currentUserValue(): UserResponse {\r\n\t\treturn this._currentUserValue;\r\n\t}\r\n\r\n\tget currentUser(): Observable<any> {\r\n\t\treturn this._currentUserSubject.asObservable();\r\n\t}\r\n\r\n\tsetting(prop: string): any {\r\n\t\tif (prop.indexOf('.') > 0) {\r\n\t\t\tconst split = prop.split('.');\r\n\t\t\t// return this.currentUserValue.setting.bind(split);\r\n\t\t}\r\n\t\treturn this.currentUserValue.setting[prop];\r\n\t}\r\n\r\n\tlogin(username: string, password: string) {\r\n\r\n\t}\r\n\r\n\tverifyToken(token?: string): Observable<boolean> {\r\n\t\treturn this.http.get(this.config.tokenVerifyEndPoint).pipe(map(res => {\r\n\t\t\tif (res.success) {\r\n\t\t\t\tconsole.log(res.success);\r\n\t\t\t\tthis._currentUserValue = res.result;\r\n\t\t\t\tthis._currentUserSubject.next(res.result);\r\n\t\t\t\tthis.router.navigateByUrl(this.config.loginEndPoint);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}));\r\n\t}\r\n\r\n\tloggedIn(): boolean {\r\n\t\treturn this._currentUserValue !== null;\r\n\t}\r\n\r\n\tlogout(endPoint: string): Promise<boolean> {\r\n\t\treturn new Promise<boolean>((resolve, reject) => {\r\n\t\t\tthis.http.get(endPoint || this.config.logoutEndPoint).subscribe(res => {\r\n\t\t\t\tthis._currentUserSubject.next(null);\r\n\t\t\t\tthis._currentUserValue = null;\r\n\t\t\t\tthis.router.navigateByUrl(this.config.guards.loggedOutGuard.redirectUrl);\r\n\t\t\t\tresolve(true);\r\n\t\t\t}, (err) => reject);\r\n\t\t});\r\n\t}\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {CoreTranslateService} from './core-translate.service';\r\nimport {AuthenticationService} from './authentication.service';\r\nimport {InjectToken} from '../decorators/inject.decorator';\r\nimport {AuthModuleConfig} from '../interfaces/config.model';\r\n\r\n@Injectable()\r\nexport class AppLoadService {\r\n\r\n\t@InjectToken(AuthenticationService) _authService: AuthenticationService;\r\n\r\n\tconstructor(private _translateService: CoreTranslateService,\r\n\t\t\t\t@Inject('authConfig') private config: AuthModuleConfig) {\r\n\t}\r\n\r\n\tinitializeApp(): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._translateService.loaded.subscribe(completed => {\r\n\t\t\t\tif (completed) {\r\n\t\t\t\t\tif (!this.config.useTokenVerify) {\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._authService.verifyToken().subscribe(res => {\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {CoreModuleConfig} from '../interfaces/config.model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CoreHttpInterceptor implements HttpInterceptor {\n\n\tconstructor(@Inject('config') private config: CoreModuleConfig) {\n\t}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n\t\tlet changeHeader;\n\t\tif (this.config.api.useInterceptor) {\n\t\t\tchangeHeader = {url: `${this.config.api.baseUrl}${req.url}`};\n\t\t}\n\t\tconst apiReq = req.clone(changeHeader);\n\t\treturn next.handle(apiReq);\n\n\t}\n\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport {distinctUntilChanged, filter, map} from 'rxjs/operators';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {IRoutePath, routePathExtract} from '../util/helper';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class BreadcrumbsService {\n\n\tpublic breadcrumbs$ = new BehaviorSubject<IBreadcrumb[]>([]);\n\n\tconstructor(private router: Router,\n\t\t\t\tprivate activatedRoute: ActivatedRoute) {\n\n\t\trouter.events.pipe(\n\t\t\tfilter(event => event instanceof NavigationEnd),\n\t\t\tdistinctUntilChanged(),\n\t\t\tmap(event => {\n\t\t\t\tconsole.log('start');\n\t\t\t\tthis.breadcrumbs$.next([]);\n\t\t\t\tthis._resolveCrumbs(activatedRoute.root);\n\t\t\t})\n\t\t).subscribe(res => {\n\n\t\t});\n\n\t}\n\n\tprivate _resolveCrumbs(route: ActivatedRoute, url: string = '') {\n\n\t\tconsole.log('_resolveCrumbs');\n\t\tconst label = route.routeConfig ? route.routeConfig.data['title'] : 'Home';\n\t\tconst path = route.routeConfig ? route.routeConfig.path : '';\n\t\tconst pathExtract = routePathExtract(path, route);\n\n\t\tconst nextUrl = `${url}${path}/`;\n\t\tconst breadcrumb = {\n\t\t\tkey: pathExtract.key,\n\t\t\tlabel: pathExtract.label,\n\t\t\turl: nextUrl\n\t\t};\n\t\tconst newBreadcrumbs = [...this.crumbsValue, breadcrumb];\n\t\tthis.breadcrumbs$.next(newBreadcrumbs);\n\t\tconsole.log(newBreadcrumbs);\n\n\t\tif (route.firstChild) {\n\t\t\treturn this._resolveCrumbs(route.firstChild, nextUrl);\n\t\t}\n\t}\n\n\tprivate get crumbsValue(): Array<IBreadcrumb> {\n\t\treturn this.breadcrumbs$.value;\n\t}\n\n\tget crumbsAsObservable(): Observable<IBreadcrumb[]> {\n\t\treturn this.breadcrumbs$.asObservable();\n\t}\n\n\tpublic store(key: string, label: string) {\n\t\tconsole.log(this.crumbsValue.filter(x => x.key === key));\n\t\tconst found = this.crumbsValue.filter(x => x.key === key)[0];\n\t\tif (found) {\n\t\t\tconst index = this.crumbsValue.indexOf(found);\n\t\t\tthis.crumbsValue[index]['label'] = label;\n\t\t}\n\t}\n\n}\n\n\nexport interface IBreadcrumb {\n\tlabel: string;\n\turl: string;\n\tkey: string;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {BreadcrumbsService} from '../services/breadcrumbs.service';\n\n@Component({\n\tselector: 'breadcrumbs',\n\ttemplateUrl: './breadcrumbs.component.html'\n})\nexport class BreadcrumbsComponent implements OnInit {\n\n\n\tconstructor(public _breadcrumbs: BreadcrumbsService) {\n\t\t// this.breadcrumbs$ = _breadcrumbs.breadcrumbs$.asObservable();\n\t}\n\n\tngOnInit() {\n\t}\n\n}\n","import {APP_INITIALIZER, Inject, Injector, ModuleWithProviders, NgModule} from '@angular/core';\nimport {Query} from './classes/query.class';\nimport {QueryService} from './services/query.service';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CoreModuleConfig} from './interfaces/config.model';\nimport {DEFAULT_LANG, QUERY_SERVICE_TOKEN, SUPPORT_LANG} from './tokens';\nimport {InjectToken} from './decorators/inject.decorator';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {initializeApp, translateModuleOptions} from './util/helper';\nimport {UiService} from './services/ui.service';\nimport {CoreTranslateService} from './services/core-translate.service';\nimport {AppLoadService} from './services/app-load-service.service';\nimport {CoreHttpInterceptor} from './interceptors/core=http.interceptor';\nimport {BreadcrumbsService} from './services/breadcrumbs.service';\nimport {BreadcrumbsComponent} from './components/breadcrumbs.component';\nimport {RouterModule} from '@angular/router';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n\tdeclarations: [BreadcrumbsComponent],\n\timports: [\n\t\tHttpClientModule,\n\t\tRouterModule,\n\t\tTranslateModule.forRoot(translateModuleOptions),\n\t\tCommonModule\n\t],\n\texports: [TranslateModule, BreadcrumbsComponent]\n})\nexport class CoreModule {\n\n\t@InjectToken(CoreTranslateService)\n\t_translateService: CoreTranslateService;\n\n\t@InjectToken(UiService)\n\t_uiService: UiService;\n\n\tconstructor(@Inject(DEFAULT_LANG) defaultLang: string,\n\t\t\t\t@Inject(SUPPORT_LANG) supportLang: string[],\n\t\t\t\tinjector: Injector) {\n\n\t\twindow['$$$_root_injector'] = injector;\n\n\t\tthis._translateService.addLangs(supportLang);\n\t\tthis._translateService.setDefaultLang(defaultLang);\n\t\tthis._translateService.use(defaultLang).subscribe(res => {\n\n\t\t\tconst dir = defaultLang === 'fa' ? 'rtl' : 'ltr';\n\t\t\tthis._uiService.setDirection(dir);\n\t\t\tthis._translateService.isCompleted();\n\n\t\t});\n\n\n\t}\n\n\n\tstatic forRoot(config?: CoreModuleConfig): ModuleWithProviders {\n\n\t\treturn {\n\t\t\tngModule: CoreModule,\n\t\t\tproviders: [\n\t\t\t\tUiService,\n\t\t\t\tCoreTranslateService,\n\t\t\t\tAppLoadService,\n\t\t\t\tBreadcrumbsService,\n\t\t\t\t{provide: APP_INITIALIZER, useFactory: initializeApp, deps: [AppLoadService], multi: true},\n\t\t\t\t{provide: 'config', useValue: config},\n\t\t\t\t{\n\t\t\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\t\t\tuseClass: CoreHttpInterceptor,\n\t\t\t\t\tmulti: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: Query,\n\t\t\t\t\tuseClass: QueryService\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: QUERY_SERVICE_TOKEN,\n\t\t\t\t\tuseValue: QueryService\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: DEFAULT_LANG,\n\t\t\t\t\tuseValue: (config && config.language.default) || 'en'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: SUPPORT_LANG,\n\t\t\t\t\tuseValue: (config && config.language.support) || ['en', 'fa']\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n}\n","declare function escape(s: string): string;\r\n\r\nexport class TokenError extends Error {\r\n\r\n\tname = 'TokenError';\r\n\r\n\tconstructor(message: string) {\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport class Token {\r\n\tconstructor(public token: string) {\r\n\t\tif (this.token != null && this.isExpired()) {\r\n\t\t\ttoken = null;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate decodeBase64(str: string): string {\r\n\t\tlet output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n\t\tswitch (output.length % 4) {\r\n\t\t\tcase 0: {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 2: {\r\n\t\t\t\toutput += '==';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 3: {\r\n\t\t\t\toutput += '=';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tthrow new TokenError('Illegal base64url string!');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn decodeURIComponent(escape(typeof window === 'undefined' ? atob(output) : window.atob(output)));\r\n\t}\r\n\r\n\tpublic decodeToken(): any {\r\n\t\tconst parts = this.token.split('.');\r\n\r\n\t\tif (parts.length !== 3) {\r\n\t\t\tthrow new TokenError('A JWT Token must have 3 parts!');\r\n\t\t}\r\n\r\n\t\tconst decoded = this.decodeBase64(parts[1]);\r\n\t\tif (!decoded) {\r\n\t\t\tthrow new TokenError('Cannot decode the token!');\r\n\t\t}\r\n\r\n\t\treturn JSON.parse(decoded);\r\n\t}\r\n\r\n\tpublic getExpirationDate(): Date {\r\n\t\tconst decoded = this.decodeToken();\r\n\r\n\t\tif (!decoded.hasOwnProperty('exp')) {\r\n\t\t\treturn new Date();\r\n\t\t}\r\n\r\n\t\tconst date = new Date(0);\r\n\t\tdate.setUTCSeconds(decoded.exp);\r\n\r\n\t\treturn date;\r\n\t}\r\n\r\n\tpublic isExpired(offsetSeconds: number = 0): boolean {\r\n\t\tconst date = this.getExpirationDate();\r\n\r\n\t\tif (date.getSeconds() === new Date().getSeconds()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\r\n\t}\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {Token} from '../classes/token.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  private _token: BehaviorSubject<Token>;\n\n  constructor() {\n    this._token = new BehaviorSubject(new Token(localStorage.getItem('satellizer_token')));\n  }\n\n  /**\n   * Get the current token.\n   */\n  getToken(): Token {\n    const token = this._token.getValue();\n    return (token && token.token) ? token : null;\n  }\n\n  /**\n   * Returns an stream of tokens.\n   */\n  getTokenStream(): Observable<Token> {\n    return this._token.asObservable();\n  }\n\n  /**\n   * Update the current token.\n   */\n  setToken(token: string) {\n    this._token.next(new Token(token));\n  }\n\n  /**\n   * Remove the current token.\n   */\n  removeToken() {\n    this._token.next(null);\n  }\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {TokenService} from '../services/token.service';\nimport {HttpEvent, HttpHandler, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Token} from '../classes/token.class';\nimport {AuthModuleConfig} from '../interfaces/config.model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class JwtInterceptor {\n\n\tconstructor(@Inject('authConfig') private config: AuthModuleConfig,\n\t\t\t\tprivate _tokenService: TokenService) {\n\t}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n\t\tconst token: Token = this._tokenService.getToken();\n\n\t\tif (token && !token.isExpired()) {\n\t\t\t// {headers: req.headers.set(this.config.headerName, this.config.headerPrefix + ' ' + token.token)}\n\t\t\treq = req.clone({\n\t\t\t\tsetHeaders: {Authorization: `${this.config.headerPrefix} ${token.token}`}\n\t\t\t});\n\t\t}\n\n\t\treturn next.handle(req);\n\t}\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {TokenService} from './token.service';\nimport {InjectToken} from '../decorators/inject.decorator';\nimport {AuthenticationService} from './authentication.service';\nimport {AuthModuleConfig} from '../interfaces/config.model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LoggedInAuth implements CanActivate {\n\n\n\t@InjectToken(AuthenticationService)\n\t_authenticationService: AuthenticationService;\n\n\t@InjectToken(TokenService)\n\t_tokenService: TokenService;\n\n\t@InjectToken(Router)\n\t_router: Router;\n\n\tconstructor(@Inject('authConfig') private config: AuthModuleConfig) {\n\t}\n\n\tcanActivate() {\n\n\t\tconst token = this._tokenService.getToken();\n\n\t\tif (token && token.token) {\n\t\t\treturn !token.isExpired();\n\t\t}\n\n\t\tlet redirectUrl = this.config.guards.loggedInGuard.redirectUrl;\n\t\tif (redirectUrl) {\n\t\t\treturn this._router.navigate([redirectUrl]);\n\t\t}\n\t\treturn false;\n\n\t}\n}\n\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LoggedOutAuth implements CanActivate {\n\n\t@InjectToken(AuthenticationService)\n\t_authenticationService: AuthenticationService;\n\n\t@InjectToken(TokenService)\n\t_tokenService: TokenService;\n\n\t@InjectToken(Router)\n\t_router: Router;\n\n\tconstructor(@Inject('authConfig') private config: AuthModuleConfig) {\n\t}\n\n\tcanActivate() {\n\n\t\tconst token = this._tokenService.getToken();\n\n\t\tif (token && token.token && !token.isExpired()) {\n\t\t\tconst redirectUrl = this.config.guards.loggedOutGuard.redirectUrl;\n\t\t\tif (redirectUrl) {\n\t\t\t\treturn this._router.navigate([redirectUrl]);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {JwtInterceptor} from './interceptors/jwt.interceptor';\nimport {RouterModule} from '@angular/router';\nimport {LoggedInAuth, LoggedOutAuth} from './services/auth-guard.service';\nimport {AuthenticationService} from './services/authentication.service';\nimport {AuthModuleConfig} from './interfaces/config.model';\n\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, HttpClientModule, RouterModule]\n})\nexport class AuthModule {\n\n\tstatic forRoot(config?: AuthModuleConfig): ModuleWithProviders {\n\n\t\treturn {\n\t\t\tngModule: AuthModule,\n\t\t\tproviders: [\n\t\t\t\t{provide: 'authConfig', useValue: config},\n\t\t\t\tAuthenticationService, LoggedInAuth, LoggedOutAuth,\n\t\t\t\t{\n\t\t\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\t\t\tuseClass: JwtInterceptor,\n\t\t\t\t\tmulti: true\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {NgxCoolDialogResult, NgxCoolDialogsLocalConfig, NgxCoolDialogsService} from 'ngx-cool-dialogs';\nimport {UiModuleConfig} from '../interfaces/config.model';\nimport {InjectToken} from '../decorators/inject.decorator';\nimport {CoreTranslateService} from './core-translate.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DialogService {\n\n\t@InjectToken(NgxCoolDialogsService)\n\t_dialogService: NgxCoolDialogsService;\n\n\tprivate _config: NgxCoolDialogsLocalConfig;\n\n\tconstructor(@Inject('uiConfig') private config: UiModuleConfig,\n\t\t\t\tprivate _translateService: CoreTranslateService) {\n\t\tthis.reConfig();\n\n\t}\n\n\tprompt(prompt: string): NgxCoolDialogResult {\n\t\tprompt = this._translateService.instant(prompt);\n\t\treturn this._dialogService.prompt(prompt, this._config);\n\t}\n\n\tconfirm(message: string) {\n\t\tmessage = this._translateService.instant(message);\n\t\treturn this._dialogService.confirm(message, this._config);\n\t}\n\n\n\talert(message: string) {\n\t\treturn this._dialogService.alert(message, this._config);\n\t}\n\n\treConfig() {\n\n\t\tconst {theme, defaultText, cancelButtonText, okButtonText, color} = this.config.dialog;\n\t\t// console.log(theme);\n\n\t\tthis._config = {\n\t\t\ttheme,\n\t\t\tcolor,\n\t\t\tdefaultText: this._translateService.instant(defaultText),\n\t\t\tcancelButtonText: this._translateService.instant(cancelButtonText),\n\t\t\tokButtonText: this._translateService.instant(okButtonText),\n\t\t};\n\n\t}\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Toast} from 'ngx-toast-notifications';\n\n@Component({\n\tselector: 'lib-toast-template',\n\ttemplate: `\n\t\t<div class=\"toast-container\">\n\t\t\t<div class=\"toast-icon\">\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div class=\"toast-message\">\n\t\t\t\t<span class=\"msg-caption\">\n\t\t\t\t\t{{toast.caption}}\n\t\t\t\t</span>\n\t\t\t\t<span class=\"msg-text\">\n\t\t\t\t\t{{toast.text}}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tstyleUrls: ['./toast-template.component.scss']\n})\nexport class ToastTemplateComponent {\n\n\t@Input() toast: Toast;\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {CoreTranslateService} from './core-translate.service';\nimport {UiModuleConfig} from '../interfaces/config.model';\nimport {Toast, Toaster} from 'ngx-toast-notifications';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ToastService {\n\n\tconstructor(private _translateService: CoreTranslateService,\n\t\t\t\tprivate _toast: Toaster,\n\t\t\t\t@Inject('uiConfig') private config: UiModuleConfig) {\n\t}\n\n\tsuccess(text: string, replace?: Object, duration?: number): Toast {\n\n\t\tduration = duration || this.config.toast.duration;\n\t\tconst caption = this._translateService.instant('GLOBAL.OK_TITLE', replace);\n\t\ttext = this._translateService.instant(text, replace);\n\n\t\treturn this._toast.open({text, type: 'success', caption, duration});\n\t}\n\n\twarning(text: string, replace?: Object, duration?: number): Toast {\n\n\t\tduration = duration || this.config.toast.duration;\n\t\tconst caption = this._translateService.instant('GLOBAL.OK_TITLE', replace);\n\t\ttext = this._translateService.instant(text, replace);\n\n\t\treturn this._toast.open({text, type: 'warning', caption, duration});\n\t}\n\n\terror(text: string, replace?: Object, duration?: number): Toast {\n\n\t\tduration = duration || this.config.toast.duration;\n\t\tconst caption = this._translateService.instant('GLOBAL.ERROR_TITLE', replace);\n\t\ttext = this._translateService.instant(text, replace);\n\n\t\treturn this._toast.open({text, type: 'danger', caption, duration});\n\t}\n\n\tinfo(text: string, replace?: Object, duration?: number): Toast {\n\n\t\tduration = duration || this.config.toast.duration;\n\t\tconst caption = this._translateService.instant('GLOBAL.INFO_TITLE', replace);\n\t\ttext = this._translateService.instant(text, replace);\n\n\t\treturn this._toast.open({text, type: 'info', caption, duration});\n\t}\n\n}\n","import {\r\n\tComponent,\r\n\tComponentFactoryResolver,\r\n\tComponentRef,\r\n\tInput,\r\n\tOnDestroy,\r\n\tOnInit,\r\n\tViewChild,\r\n\tViewContainerRef\r\n} from '@angular/core';\r\nimport {BsModalRef} from 'ngx-bootstrap';\r\nimport {NgForm} from '@angular/forms';\r\nimport {Subject, Subscription} from 'rxjs';\r\n\r\n@Component({\r\n\ttemplate: `\r\n\t\t<div class=\"modal-header\">\r\n\t\t\t<h5 class=\"modal-title\">{{title}}</h5>\r\n\t\t\t<button type=\"button\" class=\"close\" (click)=\"onHide()\">\r\n\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t\t<div class=\"modal-body\">\r\n\t\t\t<form #f=\"ngForm\">\r\n\t\t\t\t<ng-container #container libNgForm></ng-container>\r\n\t\t\t\t<button type=\"submit\" class=\"btn btn-success mr-2\" *ngIf=\"loading\"\r\n\t\t\t\t\t\t[progress]=\"promise\"\r\n\t\t\t\t\t\t[disabled]=\"f.invalid\"\r\n\t\t\t\t\t\t(click)=\"onSave()\">\r\n\t\t\t\t\tSave\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"submit\" class=\"btn btn-success\" (click)=\"onClose()\">\r\n\t\t\t\t\tClose\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\r\n\t\t</div>\r\n\t`,\r\n\tstyleUrls: ['./modal-template.component.css']\r\n})\r\nexport class ModalTemplateComponent implements OnInit, OnDestroy {\r\n\r\n\t@ViewChild('f', {static: true}) form: NgForm;\r\n\tpublic onSubmit: Subject<boolean>;\r\n\ttitle: string;\r\n\ttype: any;\r\n\tdata: any;\r\n\r\n\tcomponent: any;\r\n\tcomponentRef: ComponentRef<any>;\r\n\r\n\tloading = false;\r\n\tpromise: Subscription;\r\n\r\n\t@Input() set componentType(c: any) {\r\n\t\tthis.component = c;\r\n\t\tthis.onSubmit = new Subject();\r\n\t\tthis.renderContent();\r\n\t}\r\n\r\n\t@ViewChild('container', {\r\n\t\tread: ViewContainerRef,\r\n\t\tstatic: true\r\n\t}) container: ViewContainerRef;\r\n\r\n\tconstructor(private modalRef: BsModalRef) {\r\n\t}\r\n\r\n\r\n\trenderContent() {\r\n\t\tthis.container.clear();\r\n\t\tconst injector = this.container.injector;\r\n\t\tconst cfr = injector.get(ComponentFactoryResolver);\r\n\t\tconst componentFactory = cfr.resolveComponentFactory(this.component);\r\n\t\tconst componentRef = this.container.createComponent<any>(componentFactory);\r\n\t\tcomponentRef.instance.form = this.form;\r\n\t\tthis.componentRef = componentRef;\r\n\t\tthis.loading = true;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.componentRef) {\r\n\t\t\tthis.componentRef.destroy();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tonSave() {\r\n\r\n\t\tconst resolveModalState = () => {\r\n\t\t\tthis.onSubmit.next(true);\r\n\t\t\tthis.modalRef.hide();\r\n\t\t};\r\n\r\n\t\tthis.promise = this.cri.onSave(this.form.value);\r\n\t\tconst isSubscription: boolean = this.promise instanceof Subscription;\r\n\t\tif (isSubscription) {\r\n\t\t\tconst promise = new Promise((resolve) => {\r\n\t\t\t\t(this.promise as Subscription).add(resolve);\r\n\t\t\t});\r\n\t\t\tif (promise.finally) {\r\n\t\t\t\tpromise.finally(resolveModalState);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonClose() {\r\n\t\tthis.onSubmit.next(false);\r\n\t\tthis.modalRef.hide();\r\n\t}\r\n\r\n\tonHide() {\r\n\t\tthis.modalRef.hide();\r\n\t}\r\n\r\n\tget cri(): any {\r\n\t\treturn this.componentRef.instance;\r\n\t}\r\n}\r\n","import {Directive, forwardRef} from '@angular/core';\nimport {ControlContainer, NgForm} from '@angular/forms';\n\nexport const formDirectiveProvider: any = {\n\tprovide: ControlContainer,\n\tuseExisting: forwardRef(() => NgForm)\n};\n\n@Directive({\n\tselector: '[libNgForm]',\n\tproviders: [formDirectiveProvider],\n\texportAs: 'ngForm'\n})\nexport class NgFormDirective {\n\n\tconstructor() {\n\t}\n\n}\n","import {Directive, ElementRef, HostListener, Input} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\n@Directive({\n  selector: '[progress]'\n})\nexport class ProgressButtonDirective {\n\n\telement: HTMLElement;\n\tpromise: any;\n\tisPromiseDone = false;\n\n\tconstructor(el: ElementRef) {\n\t\tthis.element = el.nativeElement;\n\t}\n\n\t@Input()\n\tset progress(value: Subscription) {\n\t\tconst isSubscription: boolean = value instanceof Subscription;\n\t\tif (isSubscription) {\n\t\t\tthis.promise = new Promise((resolve) => {\n\t\t\t\t(value as Subscription).add(resolve);\n\t\t\t});\n\t\t\tthis.initPromiseHandler();\n\t\t}\n\t}\n\n\tdisabled() {\n\t\tthis.element.setAttribute('disabled', 'disabled');\n\t}\n\n\tenabled() {\n\t\tthis.element.removeAttribute('disabled');\n\t}\n\n\tinitPromiseHandler() {\n\t\tif (this.element && this.promise) {\n\t\t\tthis.disabled();\n\t\t\tconst promise = this.promise;\n\n\t\t\tconst resolveLoadingState = () => {\n\t\t\t\tthis.isPromiseDone = true;\n\t\t\t\tif (this.isPromiseDone) {\n\t\t\t\t\tthis.enabled();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (promise.finally) {\n\t\t\t\tpromise.finally(resolveLoadingState);\n\t\t\t} else {\n\t\t\t\tpromise\n\t\t\t\t\t.then(resolveLoadingState)\n\t\t\t\t\t.catch(resolveLoadingState);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t@HostListener('click')\n\thandleButton() {\n\t\t// some code\n\t}\n\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgxCoolDialogsModule} from 'ngx-cool-dialogs';\nimport {UiModuleConfig} from './interfaces/config.model';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {DIALOG_CONFIG_DEFAULTS} from './config';\nimport {DialogService} from './services/dialog.service';\nimport {ToastNotificationsModule} from 'ngx-toast-notifications';\nimport {ToastTemplateComponent} from './components/toast-template.component';\nimport {ToastService} from './services/toast.service';\nimport {NgbDatepickerModule} from '@ng-bootstrap/ng-bootstrap';\nimport {BsModalRef, ModalModule} from 'ngx-bootstrap';\nimport {ModalTemplateComponent} from './components/modal-template.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgFormDirective} from './directives/ng-form.directive';\nimport {ProgressButtonDirective} from './directives/progress-button.directive';\n\n\n@NgModule({\n\tdeclarations: [\n\t\tModalTemplateComponent,\n\t\tToastTemplateComponent,\n\t\tNgFormDirective,\n\t\tProgressButtonDirective\n\t],\n\timports: [\n\t\tBrowserAnimationsModule,\n\t\tNgxCoolDialogsModule.forRoot(DIALOG_CONFIG_DEFAULTS),\n\t\tToastNotificationsModule.forRoot({component: ToastTemplateComponent}),\n\t\tNgbDatepickerModule,\n\t\tModalModule.forRoot(),\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tCommonModule,\n\t],\n\tentryComponents: [\n\t\tModalTemplateComponent,\n\t\tToastTemplateComponent\n\t]\n})\nexport class UIModule {\n\n\tstatic forRoot(config: UiModuleConfig): ModuleWithProviders {\n\n\t\treturn {\n\t\t\tngModule: UIModule,\n\t\t\tproviders: [\n\t\t\t\t{provide: 'uiConfig', useValue: config},\n\t\t\t\tDialogService,\n\t\t\t\tToastService,\n\t\t\t\tBsModalRef\n\t\t\t]\n\t\t};\n\t}\n}\n\n","import {OnDestroy, OnInit} from '@angular/core';\r\n\r\nexport abstract class Base implements OnInit, OnDestroy {\r\n\r\n\tisAlive = true;\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\t// .pipe(takeWhile(x => this.isAlive))\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.isAlive = false;\r\n\t}\r\n}\r\n","import {\r\n\tComponentFactory,\r\n\tComponentFactoryResolver,\r\n\tComponentRef,\r\n\tInject,\r\n\tInjectable,\r\n\tInjector, ViewContainerRef\r\n} from '@angular/core';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap';\r\nimport {UiModuleConfig} from '../interfaces/config.model';\r\nimport {ModalTemplateComponent} from '../components/modal-template.component';\r\nimport {BehaviorSubject, ReplaySubject, Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ModalService {\r\n\r\n\tconstructor(private _modalService: BsModalService,\r\n\t\t\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\t\t\tpublic modalRef: BsModalRef,\r\n\t\t\t\tprivate injector: Injector,\r\n\t\t\t\t@Inject('uiConfig') private config: UiModuleConfig) {\r\n\t}\r\n\r\n\r\n\topen(componentType: any, config?: IModalConfig): ModalTemplateComponent {\r\n\r\n\t\tthis.modalRef = this._modalService.show(ModalTemplateComponent, {class: config.class});\r\n\t\tconst content = this.modalRef.content;\r\n\r\n\t\tcontent.componentType = componentType;\r\n\t\tcontent.title = config.title || 'title';\r\n\t\tcontent.type = config.type || 'add';\r\n\t\tcontent.data = config.data || {};\r\n\t\treturn content;\r\n\t}\r\n\r\n}\r\n\r\nexport interface IModalConfig {\r\n\ttitle?: string;\r\n\ttype?: 'edit' | 'add' | any;\r\n\tdata?: any;\r\n\tclass?: 'modal-lg' | 'modal-sm';\r\n}\r\n","import {Base} from './base.class';\r\nimport {IBaseModal} from '../interfaces/modal.interface';\r\nimport {ModalService} from '../services/modal.service';\r\nimport {InjectToken} from '../decorators/inject.decorator';\r\n\r\nexport class Modal extends Base implements IBaseModal {\r\n\r\n\ttype: any;\r\n\tdata: any;\r\n\r\n\t@InjectToken(ModalService)\r\n\tmodalService: ModalService;\r\n\r\n\r\n}\r\n\r\n\r\n","import {Inject, Injectable} from '@angular/core';\nimport {LocalStorageConfig} from '../interfaces/config.model';\nimport {LOCAL_STORAGE_CONFIG_DEFAULTS} from '../config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorage {\n\n  _prefix: string;\n\n  constructor(@Inject('config') config?: LocalStorageConfig) {\n    if (config) {\n      this._prefix = config.prefix || LOCAL_STORAGE_CONFIG_DEFAULTS.prefix;\n    }\n  }\n\n  set(key: string, value: string, expiredAt?: number, prefix?: string) {\n\n    if (value !== null) {\n      const data = {\n        expire: expiredAt || 0,\n        data: value\n      };\n      localStorage.setItem(`${prefix || this._prefix}.${key}`, JSON.stringify(data));\n    }\n\n  }\n\n  getKey(index: number): string | null | undefined {\n    if (index < 0) {\n      console.error(new Error('index has to be 0 or greater'));\n    }\n    try {\n      return localStorage.key(index);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  has(key: string, prefix?: string): boolean {\n    return (`${prefix || this._prefix}.${key}` in localStorage);\n  }\n\n  get(key: string, prefix?: string): string | null | undefined {\n    try {\n      return localStorage.getItem(`${prefix || this._prefix}.${key}`);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  remove(key: string, prefix?: string): void {\n    try {\n      localStorage.removeItem(`${prefix || this._prefix}_${key}`);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  clear(): void {\n    try {\n      localStorage.clear();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n}\n"]}